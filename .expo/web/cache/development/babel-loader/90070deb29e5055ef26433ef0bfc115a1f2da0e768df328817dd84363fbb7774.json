{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\stjones\\Desktop\\Ra_App\\node_modules\\react-native-screens\\src\\components\\gamma\\SplitViewScreen.types.ts"],"sourcesContent":["import type { NativeSyntheticEvent, ViewProps } from 'react-native';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype GenericEmptyEvent = Readonly<{}>;\n\nexport type SplitViewScreenColumnType = 'column' | 'inspector';\n\nexport interface SplitViewScreenProps extends ViewProps {\n  children?: React.ReactNode;\n  /**\n   * @summary A callback that gets invoked when the current SplitViewScreen did appear.\n   *\n   * This is called as soon as the transition ends.\n   */\n  onDidAppear?: (e: NativeSyntheticEvent<GenericEmptyEvent>) => void;\n  /**\n   * @summary A callback that gets invoked when the current SplitViewScreen did disappear.\n   *\n   * This is called as soon as the transition ends.\n   */\n  onDidDisappear?: (e: NativeSyntheticEvent<GenericEmptyEvent>) => void;\n  /**\n   * @summary A callback that gets invoked when the current SplitViewScreen will appear.\n   *\n   * This is called as soon as the transition begins.\n   */\n  onWillAppear?: (e: NativeSyntheticEvent<GenericEmptyEvent>) => void;\n  /**\n   * @summary A callback that gets invoked when the current SplitViewScreen will disappear.\n   *\n   * This is called as soon as the transition begins.\n   */\n  onWillDisappear?: (e: NativeSyntheticEvent<GenericEmptyEvent>) => void;\n}\n"],"mappings":"","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}