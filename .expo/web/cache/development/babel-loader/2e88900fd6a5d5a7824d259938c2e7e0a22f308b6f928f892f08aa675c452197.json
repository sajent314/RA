{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RawPerformanceEntryTypeValues = void 0;\nexports.performanceEntryTypeToRaw = performanceEntryTypeToRaw;\nexports.rawToPerformanceEntry = rawToPerformanceEntry;\nexports.rawToPerformanceEntryType = rawToPerformanceEntryType;\nvar _PerformanceEntry = require(\"./PerformanceEntry\");\nvar _PerformanceEventTiming = require(\"./PerformanceEventTiming\");\nvar RawPerformanceEntryTypeValues = exports.RawPerformanceEntryTypeValues = {\n  UNDEFINED: 0,\n  MARK: 1,\n  MEASURE: 2,\n  EVENT: 3\n};\nfunction rawToPerformanceEntry(entry) {\n  if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {\n    return new _PerformanceEventTiming.PerformanceEventTiming({\n      name: entry.name,\n      startTime: entry.startTime,\n      duration: entry.duration,\n      processingStart: entry.processingStart,\n      processingEnd: entry.processingEnd,\n      interactionId: entry.interactionId\n    });\n  } else {\n    return new _PerformanceEntry.PerformanceEntry({\n      name: entry.name,\n      entryType: rawToPerformanceEntryType(entry.entryType),\n      startTime: entry.startTime,\n      duration: entry.duration\n    });\n  }\n}\nfunction rawToPerformanceEntryType(type) {\n  switch (type) {\n    case RawPerformanceEntryTypeValues.MARK:\n      return 'mark';\n    case RawPerformanceEntryTypeValues.MEASURE:\n      return 'measure';\n    case RawPerformanceEntryTypeValues.EVENT:\n      return 'event';\n    case RawPerformanceEntryTypeValues.UNDEFINED:\n      throw new TypeError(\"rawToPerformanceEntryType: UNDEFINED can't be cast to PerformanceEntryType\");\n    default:\n      throw new TypeError(`rawToPerformanceEntryType: unexpected performance entry type received: ${type}`);\n  }\n}\nfunction performanceEntryTypeToRaw(type) {\n  switch (type) {\n    case 'mark':\n      return RawPerformanceEntryTypeValues.MARK;\n    case 'measure':\n      return RawPerformanceEntryTypeValues.MEASURE;\n    case 'event':\n      return RawPerformanceEntryTypeValues.EVENT;\n    default:\n      type;\n      throw new TypeError(`performanceEntryTypeToRaw: unexpected performance entry type received: ${type}`);\n  }\n}","map":{"version":3,"names":["_PerformanceEntry","require","_PerformanceEventTiming","RawPerformanceEntryTypeValues","exports","UNDEFINED","MARK","MEASURE","EVENT","rawToPerformanceEntry","entry","entryType","PerformanceEventTiming","name","startTime","duration","processingStart","processingEnd","interactionId","PerformanceEntry","rawToPerformanceEntryType","type","TypeError","performanceEntryTypeToRaw"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/react-native/Libraries/WebPerformance/RawPerformanceEntry.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  RawPerformanceEntry,\n  RawPerformanceEntryType,\n} from './NativePerformanceObserver';\nimport type {PerformanceEntryType} from './PerformanceEntry';\n\nimport {PerformanceEntry} from './PerformanceEntry';\nimport {PerformanceEventTiming} from './PerformanceEventTiming';\n\nexport const RawPerformanceEntryTypeValues = {\n  UNDEFINED: 0,\n  MARK: 1,\n  MEASURE: 2,\n  EVENT: 3,\n};\n\nexport function rawToPerformanceEntry(\n  entry: RawPerformanceEntry,\n): PerformanceEntry {\n  if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {\n    return new PerformanceEventTiming({\n      name: entry.name,\n      startTime: entry.startTime,\n      duration: entry.duration,\n      processingStart: entry.processingStart,\n      processingEnd: entry.processingEnd,\n      interactionId: entry.interactionId,\n    });\n  } else {\n    return new PerformanceEntry({\n      name: entry.name,\n      entryType: rawToPerformanceEntryType(entry.entryType),\n      startTime: entry.startTime,\n      duration: entry.duration,\n    });\n  }\n}\n\nexport function rawToPerformanceEntryType(\n  type: RawPerformanceEntryType,\n): PerformanceEntryType {\n  switch (type) {\n    case RawPerformanceEntryTypeValues.MARK:\n      return 'mark';\n    case RawPerformanceEntryTypeValues.MEASURE:\n      return 'measure';\n    case RawPerformanceEntryTypeValues.EVENT:\n      return 'event';\n    case RawPerformanceEntryTypeValues.UNDEFINED:\n      throw new TypeError(\n        \"rawToPerformanceEntryType: UNDEFINED can't be cast to PerformanceEntryType\",\n      );\n    default:\n      throw new TypeError(\n        `rawToPerformanceEntryType: unexpected performance entry type received: ${type}`,\n      );\n  }\n}\n\nexport function performanceEntryTypeToRaw(\n  type: PerformanceEntryType,\n): RawPerformanceEntryType {\n  switch (type) {\n    case 'mark':\n      return RawPerformanceEntryTypeValues.MARK;\n    case 'measure':\n      return RawPerformanceEntryTypeValues.MEASURE;\n    case 'event':\n      return RawPerformanceEntryTypeValues.EVENT;\n    default:\n      // Verify exhaustive check with Flow\n      (type: empty);\n      throw new TypeError(\n        `performanceEntryTypeToRaw: unexpected performance entry type received: ${type}`,\n      );\n  }\n}\n"],"mappings":";;;;;;;AAgBA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAD,OAAA;AAEO,IAAME,6BAA6B,GAAAC,OAAA,CAAAD,6BAAA,GAAG;EAC3CE,SAAS,EAAE,CAAC;EACZC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,CAAC;EACVC,KAAK,EAAE;AACT,CAAC;AAEM,SAASC,qBAAqBA,CACnCC,KAA0B,EACR;EAClB,IAAIA,KAAK,CAACC,SAAS,KAAKR,6BAA6B,CAACK,KAAK,EAAE;IAC3D,OAAO,IAAII,8CAAsB,CAAC;MAChCC,IAAI,EAAEH,KAAK,CAACG,IAAI;MAChBC,SAAS,EAAEJ,KAAK,CAACI,SAAS;MAC1BC,QAAQ,EAAEL,KAAK,CAACK,QAAQ;MACxBC,eAAe,EAAEN,KAAK,CAACM,eAAe;MACtCC,aAAa,EAAEP,KAAK,CAACO,aAAa;MAClCC,aAAa,EAAER,KAAK,CAACQ;IACvB,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAO,IAAIC,kCAAgB,CAAC;MAC1BN,IAAI,EAAEH,KAAK,CAACG,IAAI;MAChBF,SAAS,EAAES,yBAAyB,CAACV,KAAK,CAACC,SAAS,CAAC;MACrDG,SAAS,EAAEJ,KAAK,CAACI,SAAS;MAC1BC,QAAQ,EAAEL,KAAK,CAACK;IAClB,CAAC,CAAC;EACJ;AACF;AAEO,SAASK,yBAAyBA,CACvCC,IAA6B,EACP;EACtB,QAAQA,IAAI;IACV,KAAKlB,6BAA6B,CAACG,IAAI;MACrC,OAAO,MAAM;IACf,KAAKH,6BAA6B,CAACI,OAAO;MACxC,OAAO,SAAS;IAClB,KAAKJ,6BAA6B,CAACK,KAAK;MACtC,OAAO,OAAO;IAChB,KAAKL,6BAA6B,CAACE,SAAS;MAC1C,MAAM,IAAIiB,SAAS,CACjB,4EACF,CAAC;IACH;MACE,MAAM,IAAIA,SAAS,CACjB,0EAA0ED,IAAI,EAChF,CAAC;EACL;AACF;AAEO,SAASE,yBAAyBA,CACvCF,IAA0B,EACD;EACzB,QAAQA,IAAI;IACV,KAAK,MAAM;MACT,OAAOlB,6BAA6B,CAACG,IAAI;IAC3C,KAAK,SAAS;MACZ,OAAOH,6BAA6B,CAACI,OAAO;IAC9C,KAAK,OAAO;MACV,OAAOJ,6BAA6B,CAACK,KAAK;IAC5C;MAEGa,IAAI;MACL,MAAM,IAAIC,SAAS,CACjB,0EAA0ED,IAAI,EAChF,CAAC;EACL;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}