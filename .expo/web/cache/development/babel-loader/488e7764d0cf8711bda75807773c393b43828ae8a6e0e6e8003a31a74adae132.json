{"ast":null,"code":"import { upsertActivityLog, getActivityLog } from './api';\nconst today = new Date().toISOString().split('T')[0];\nconst getOrCreateLog = async userId => {\n  let log = await getActivityLog(userId, today);\n  if (!log) {\n    log = {\n      user_id: userId,\n      log_date: today,\n      pebi_score: 0,\n      ai_score: 0,\n      at_score: 0\n    };\n  }\n  return log;\n};\nexport const incrementPebiScore = async (userId, amount = 1) => {\n  const log = await getOrCreateLog(userId);\n  const newPebiScore = (log.pebi_score || 0) + amount;\n  await upsertActivityLog({\n    user_id: userId,\n    pebi_score: newPebiScore\n  });\n};\nexport const incrementAiScore = async (userId, amount = 1) => {\n  const log = await getOrCreateLog(userId);\n  const newAiScore = (log.ai_score || 0) + amount;\n  await upsertActivityLog({\n    user_id: userId,\n    ai_score: newAiScore\n  });\n};\nexport const incrementAtScore = async (userId, distance) => {\n  const log = await getOrCreateLog(userId);\n  const newAtScore = (log.at_score || 0) + distance;\n  await upsertActivityLog({\n    user_id: userId,\n    at_score: newAtScore\n  });\n};","map":{"version":3,"names":["upsertActivityLog","getActivityLog","today","Date","toISOString","split","getOrCreateLog","userId","log","user_id","log_date","pebi_score","ai_score","at_score","incrementPebiScore","amount","newPebiScore","incrementAiScore","newAiScore","incrementAtScore","distance","newAtScore"],"sources":["C:/Users/stjones/Desktop/Ra_App/src/lib/ActivityTracker.ts"],"sourcesContent":["import { upsertActivityLog, getActivityLog } from './api';\r\n\r\nconst today = new Date().toISOString().split('T')[0];\r\n\r\nconst getOrCreateLog = async (userId: string) => {\r\n  let log = await getActivityLog(userId, today);\r\n  if (!log) {\r\n    log = { user_id: userId, log_date: today, pebi_score: 0, ai_score: 0, at_score: 0 };\r\n  }\r\n  return log;\r\n};\r\n\r\nexport const incrementPebiScore = async (userId: string, amount: number = 1) => {\r\n  const log = await getOrCreateLog(userId);\r\n  const newPebiScore = (log.pebi_score || 0) + amount;\r\n  await upsertActivityLog({ user_id: userId, pebi_score: newPebiScore });\r\n};\r\n\r\nexport const incrementAiScore = async (userId: string, amount: number = 1) => {\r\n  const log = await getOrCreateLog(userId);\r\n  const newAiScore = (log.ai_score || 0) + amount;\r\n  await upsertActivityLog({ user_id: userId, ai_score: newAiScore });\r\n};\r\n\r\nexport const incrementAtScore = async (userId: string, distance: number) => {\r\n  const log = await getOrCreateLog(userId);\r\n  const newAtScore = (log.at_score || 0) + distance;\r\n  await upsertActivityLog({ user_id: userId, at_score: newAtScore });\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,cAAc,QAAQ,OAAO;AAEzD,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAEpD,MAAMC,cAAc,GAAG,MAAOC,MAAc,IAAK;EAC/C,IAAIC,GAAG,GAAG,MAAMP,cAAc,CAACM,MAAM,EAAEL,KAAK,CAAC;EAC7C,IAAI,CAACM,GAAG,EAAE;IACRA,GAAG,GAAG;MAAEC,OAAO,EAAEF,MAAM;MAAEG,QAAQ,EAAER,KAAK;MAAES,UAAU,EAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAE,CAAC;EACrF;EACA,OAAOL,GAAG;AACZ,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAG,MAAAA,CAAOP,MAAc,EAAEQ,MAAc,GAAG,CAAC,KAAK;EAC9E,MAAMP,GAAG,GAAG,MAAMF,cAAc,CAACC,MAAM,CAAC;EACxC,MAAMS,YAAY,GAAG,CAACR,GAAG,CAACG,UAAU,IAAI,CAAC,IAAII,MAAM;EACnD,MAAMf,iBAAiB,CAAC;IAAES,OAAO,EAAEF,MAAM;IAAEI,UAAU,EAAEK;EAAa,CAAC,CAAC;AACxE,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOV,MAAc,EAAEQ,MAAc,GAAG,CAAC,KAAK;EAC5E,MAAMP,GAAG,GAAG,MAAMF,cAAc,CAACC,MAAM,CAAC;EACxC,MAAMW,UAAU,GAAG,CAACV,GAAG,CAACI,QAAQ,IAAI,CAAC,IAAIG,MAAM;EAC/C,MAAMf,iBAAiB,CAAC;IAAES,OAAO,EAAEF,MAAM;IAAEK,QAAQ,EAAEM;EAAW,CAAC,CAAC;AACpE,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOZ,MAAc,EAAEa,QAAgB,KAAK;EAC1E,MAAMZ,GAAG,GAAG,MAAMF,cAAc,CAACC,MAAM,CAAC;EACxC,MAAMc,UAAU,GAAG,CAACb,GAAG,CAACK,QAAQ,IAAI,CAAC,IAAIO,QAAQ;EACjD,MAAMpB,iBAAiB,CAAC;IAAES,OAAO,EAAEF,MAAM;IAAEM,QAAQ,EAAEQ;EAAW,CAAC,CAAC;AACpE,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}