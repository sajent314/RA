{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _RCTDeviceEventEmitter = _interopRequireDefault(require(\"../EventEmitter/RCTDeviceEventEmitter\"));\nvar _NativeRedBox = _interopRequireDefault(require(\"../NativeModules/specs/NativeRedBox\"));\nvar _NativeBugReporting = _interopRequireDefault(require(\"./NativeBugReporting\"));\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', function () {\n    return require('./dumpReactTree')();\n  });\n}\nvar BugReporting = function () {\n  function BugReporting() {\n    (0, _classCallCheck2.default)(this, BugReporting);\n  }\n  return (0, _createClass2.default)(BugReporting, null, [{\n    key: \"_maybeInit\",\n    value: function _maybeInit() {\n      if (!BugReporting._subscription) {\n        BugReporting._subscription = _RCTDeviceEventEmitter.default.addListener('collectBugExtraData', BugReporting.collectExtraData, null);\n        defaultExtras();\n      }\n      if (!BugReporting._redboxSubscription) {\n        BugReporting._redboxSubscription = _RCTDeviceEventEmitter.default.addListener('collectRedBoxExtraData', BugReporting.collectExtraData, null);\n      }\n    }\n  }, {\n    key: \"addSource\",\n    value: function addSource(key, callback) {\n      return this._addSource(key, callback, BugReporting._extraSources);\n    }\n  }, {\n    key: \"addFileSource\",\n    value: function addFileSource(key, callback) {\n      return this._addSource(key, callback, BugReporting._fileSources);\n    }\n  }, {\n    key: \"_addSource\",\n    value: function _addSource(key, callback, source) {\n      BugReporting._maybeInit();\n      if (source.has(key)) {\n        console.warn(`BugReporting.add* called multiple times for same key '${key}'`);\n      }\n      source.set(key, callback);\n      return {\n        remove: function remove() {\n          source.delete(key);\n        }\n      };\n    }\n  }, {\n    key: \"collectExtraData\",\n    value: function collectExtraData() {\n      var extraData = {};\n      for (var _ref of BugReporting._extraSources) {\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n        var _key = _ref2[0];\n        var callback = _ref2[1];\n        extraData[_key] = callback();\n      }\n      var fileData = {};\n      for (var _ref3 of BugReporting._fileSources) {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);\n        var _key2 = _ref4[0];\n        var _callback = _ref4[1];\n        fileData[_key2] = _callback();\n      }\n      if (_NativeBugReporting.default != null && _NativeBugReporting.default.setExtraData != null) {\n        _NativeBugReporting.default.setExtraData(extraData, fileData);\n      }\n      if (_NativeRedBox.default != null && _NativeRedBox.default.setExtraData != null) {\n        _NativeRedBox.default.setExtraData(extraData, 'From BugReporting.js');\n      }\n      return {\n        extras: extraData,\n        files: fileData\n      };\n    }\n  }]);\n}();\nBugReporting._extraSources = new Map();\nBugReporting._fileSources = new Map();\nBugReporting._subscription = null;\nBugReporting._redboxSubscription = null;\nmodule.exports = BugReporting;","map":{"version":3,"names":["_RCTDeviceEventEmitter","_interopRequireDefault","require","_NativeRedBox","_NativeBugReporting","defaultExtras","BugReporting","addFileSource","_classCallCheck2","default","_createClass2","key","value","_maybeInit","_subscription","RCTDeviceEventEmitter","addListener","collectExtraData","_redboxSubscription","addSource","callback","_addSource","_extraSources","_fileSources","source","has","console","warn","set","remove","delete","extraData","_ref","_ref2","_slicedToArray2","fileData","_ref3","_ref4","NativeBugReporting","setExtraData","NativeRedBox","extras","files","Map","module","exports"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/react-native/Libraries/BugReporting/BugReporting.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport NativeRedBox from '../NativeModules/specs/NativeRedBox';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport NativeBugReporting from './NativeBugReporting';\n\ntype ExtraData = {[key: string]: string, ...};\ntype SourceCallback = () => string;\ntype DebugData = {\n  extras: ExtraData,\n  files: ExtraData,\n  ...\n};\n\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', () =>\n    require('./dumpReactTree')(),\n  );\n}\n\n/**\n * A simple class for collecting bug report data. Components can add sources that will be queried when a bug report\n * is created via `collectExtraData`. For example, a list component might add a source that provides the list of rows\n * that are currently visible on screen. Components should also remember to call `remove()` on the object that is\n * returned by `addSource` when they are unmounted.\n */\nclass BugReporting {\n  static _extraSources: Map<string, SourceCallback> = new Map();\n  static _fileSources: Map<string, SourceCallback> = new Map();\n  static _subscription: ?EventSubscription = null;\n  static _redboxSubscription: ?EventSubscription = null;\n\n  static _maybeInit() {\n    if (!BugReporting._subscription) {\n      BugReporting._subscription = RCTDeviceEventEmitter.addListener(\n        'collectBugExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n      defaultExtras();\n    }\n\n    if (!BugReporting._redboxSubscription) {\n      BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener(\n        'collectRedBoxExtraData',\n        // $FlowFixMe[method-unbinding]\n        BugReporting.collectExtraData,\n        null,\n      );\n    }\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void, ...} {\n    return this._addSource(key, callback, BugReporting._extraSources);\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addFileSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void, ...} {\n    return this._addSource(key, callback, BugReporting._fileSources);\n  }\n\n  static _addSource(\n    key: string,\n    callback: SourceCallback,\n    source: Map<string, SourceCallback>,\n  ): {remove: () => void, ...} {\n    BugReporting._maybeInit();\n    if (source.has(key)) {\n      console.warn(\n        `BugReporting.add* called multiple times for same key '${key}'`,\n      );\n    }\n    source.set(key, callback);\n    return {\n      remove: () => {\n        source.delete(key);\n      },\n    };\n  }\n\n  /**\n   * This can be called from a native bug reporting flow, or from JS code.\n   *\n   * If available, this will call `NativeModules.BugReporting.setExtraData(extraData)`\n   * after collecting `extraData`.\n   */\n  static collectExtraData(): DebugData {\n    const extraData: ExtraData = {};\n    for (const [key, callback] of BugReporting._extraSources) {\n      extraData[key] = callback();\n    }\n    const fileData: ExtraData = {};\n    for (const [key, callback] of BugReporting._fileSources) {\n      fileData[key] = callback();\n    }\n\n    if (NativeBugReporting != null && NativeBugReporting.setExtraData != null) {\n      NativeBugReporting.setExtraData(extraData, fileData);\n    }\n\n    if (NativeRedBox != null && NativeRedBox.setExtraData != null) {\n      NativeRedBox.setExtraData(extraData, 'From BugReporting.js');\n    }\n\n    return {extras: extraData, files: fileData};\n  }\n}\n\nmodule.exports = BugReporting;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}