{"ast":null,"code":"import { Platform } from 'expo-modules-core';\nimport ExpoLocation from './ExpoLocation';\nimport { LocationAccuracy } from './Location.types';\nimport { LocationSubscriber } from './LocationSubscribers';\nexport function installWebGeolocationPolyfill() {\n  if (Platform.OS !== 'web') {\n    if (!('window' in global)) {\n      global.window = global;\n    }\n    if (!('navigator' in global.window)) {\n      global.window.navigator = {};\n    }\n    window.navigator.geolocation = {\n      getCurrentPosition,\n      watchPosition,\n      clearWatch\n    };\n  }\n}\nfunction convertGeolocationOptions(options) {\n  return {\n    accuracy: options.enableHighAccuracy ? LocationAccuracy.High : LocationAccuracy.Balanced\n  };\n}\nfunction getCurrentPosition(success, error = () => {}, options = {}) {\n  _getCurrentPositionAsyncWrapper(success, error, options);\n}\nasync function _getCurrentPositionAsyncWrapper(success, error, options) {\n  try {\n    await ExpoLocation.requestPermissionsAsync();\n    const result = await ExpoLocation.getCurrentPositionAsync(convertGeolocationOptions(options));\n    success(result);\n  } catch (e) {\n    error(e);\n  }\n}\nfunction watchPosition(success, error, options) {\n  const watchId = LocationSubscriber.registerCallback(success);\n  ExpoLocation.watchPositionImplAsync(watchId, options).catch(err => {\n    LocationSubscriber.unregisterCallback(watchId);\n    error({\n      watchId,\n      message: err.message,\n      code: err.code\n    });\n  });\n  return watchId;\n}\nfunction clearWatch(watchId) {\n  LocationSubscriber.unregisterCallback(watchId);\n}","map":{"version":3,"names":["Platform","ExpoLocation","LocationAccuracy","LocationSubscriber","installWebGeolocationPolyfill","OS","global","window","navigator","geolocation","getCurrentPosition","watchPosition","clearWatch","convertGeolocationOptions","options","accuracy","enableHighAccuracy","High","Balanced","success","error","_getCurrentPositionAsyncWrapper","requestPermissionsAsync","result","getCurrentPositionAsync","e","watchId","registerCallback","watchPositionImplAsync","catch","err","unregisterCallback","message","code"],"sources":["C:\\Users\\stjones\\Desktop\\Ra_App\\node_modules\\expo-location\\src\\GeolocationPolyfill.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport ExpoLocation from './ExpoLocation';\nimport { LocationObject, LocationAccuracy, LocationOptions } from './Location.types';\nimport { LocationSubscriber } from './LocationSubscribers';\n\ntype GeolocationSuccessCallback = (data: LocationObject) => void;\ntype GeolocationErrorCallback = (error: any) => void;\n\ntype GeolocationOptions = {\n  enableHighAccuracy?: boolean;\n};\n\ndeclare const global: any;\n\n// @needsAudit\n/**\n * Polyfills `navigator.geolocation` for interop with the core React Native and Web API approach to geolocation.\n */\nexport function installWebGeolocationPolyfill(): void {\n  if (Platform.OS !== 'web') {\n    // Make sure `window.navigator` is defined in the global scope.\n    if (!('window' in global)) {\n      global.window = global;\n    }\n    if (!('navigator' in global.window)) {\n      global.window.navigator = {};\n    }\n\n    // @ts-ignore\n    window.navigator.geolocation = {\n      getCurrentPosition,\n      watchPosition,\n      clearWatch,\n    };\n  }\n}\n\nfunction convertGeolocationOptions(options: GeolocationOptions): LocationOptions {\n  return {\n    accuracy: options.enableHighAccuracy ? LocationAccuracy.High : LocationAccuracy.Balanced,\n  };\n}\n\nfunction getCurrentPosition(\n  success: GeolocationSuccessCallback,\n  error: GeolocationErrorCallback = () => {},\n  options: GeolocationOptions = {}\n): void {\n  _getCurrentPositionAsyncWrapper(success, error, options);\n}\n\n// This function exists to let us continue to return undefined from getCurrentPosition, while still\n// using async/await for the internal implementation of it\nasync function _getCurrentPositionAsyncWrapper(\n  success: GeolocationSuccessCallback,\n  error: GeolocationErrorCallback,\n  options: GeolocationOptions\n): Promise<any> {\n  try {\n    await ExpoLocation.requestPermissionsAsync();\n    const result = await ExpoLocation.getCurrentPositionAsync(convertGeolocationOptions(options));\n    success(result);\n  } catch (e) {\n    error(e);\n  }\n}\n\n// Polyfill: navigator.geolocation.watchPosition\nfunction watchPosition(\n  success: GeolocationSuccessCallback,\n  error: GeolocationErrorCallback,\n  options: GeolocationOptions\n) {\n  const watchId = LocationSubscriber.registerCallback(success);\n\n  ExpoLocation.watchPositionImplAsync(watchId, options).catch((err: any) => {\n    LocationSubscriber.unregisterCallback(watchId);\n    error({ watchId, message: err.message, code: err.code });\n  });\n\n  return watchId;\n}\n\n// Polyfill: navigator.geolocation.clearWatch\nfunction clearWatch(watchId: number) {\n  LocationSubscriber.unregisterCallback(watchId);\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAE5C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAAyBC,gBAAgB,QAAyB,kBAAkB;AACpF,SAASC,kBAAkB,QAAQ,uBAAuB;AAe1D,OAAM,SAAUC,6BAA6BA,CAAA;EAC3C,IAAIJ,QAAQ,CAACK,EAAE,KAAK,KAAK,EAAE;IAEzB,IAAI,EAAE,QAAQ,IAAIC,MAAM,CAAC,EAAE;MACzBA,MAAM,CAACC,MAAM,GAAGD,MAAM;IACxB;IACA,IAAI,EAAE,WAAW,IAAIA,MAAM,CAACC,MAAM,CAAC,EAAE;MACnCD,MAAM,CAACC,MAAM,CAACC,SAAS,GAAG,EAAE;IAC9B;IAGAD,MAAM,CAACC,SAAS,CAACC,WAAW,GAAG;MAC7BC,kBAAkB;MAClBC,aAAa;MACbC;KACD;EACH;AACF;AAEA,SAASC,yBAAyBA,CAACC,OAA2B;EAC5D,OAAO;IACLC,QAAQ,EAAED,OAAO,CAACE,kBAAkB,GAAGd,gBAAgB,CAACe,IAAI,GAAGf,gBAAgB,CAACgB;GACjF;AACH;AAEA,SAASR,kBAAkBA,CACzBS,OAAmC,EACnCC,KAAA,GAAkCA,CAAA,KAAK,CAAE,CAAC,EAC1CN,OAAA,GAA8B,EAAE;EAEhCO,+BAA+B,CAACF,OAAO,EAAEC,KAAK,EAAEN,OAAO,CAAC;AAC1D;AAIA,eAAeO,+BAA+BA,CAC5CF,OAAmC,EACnCC,KAA+B,EAC/BN,OAA2B;EAE3B,IAAI;IACF,MAAMb,YAAY,CAACqB,uBAAuB,EAAE;IAC5C,MAAMC,MAAM,GAAG,MAAMtB,YAAY,CAACuB,uBAAuB,CAACX,yBAAyB,CAACC,OAAO,CAAC,CAAC;IAC7FK,OAAO,CAACI,MAAM,CAAC;EACjB,CAAC,CAAC,OAAOE,CAAC,EAAE;IACVL,KAAK,CAACK,CAAC,CAAC;EACV;AACF;AAGA,SAASd,aAAaA,CACpBQ,OAAmC,EACnCC,KAA+B,EAC/BN,OAA2B;EAE3B,MAAMY,OAAO,GAAGvB,kBAAkB,CAACwB,gBAAgB,CAACR,OAAO,CAAC;EAE5DlB,YAAY,CAAC2B,sBAAsB,CAACF,OAAO,EAAEZ,OAAO,CAAC,CAACe,KAAK,CAAEC,GAAQ,IAAI;IACvE3B,kBAAkB,CAAC4B,kBAAkB,CAACL,OAAO,CAAC;IAC9CN,KAAK,CAAC;MAAEM,OAAO;MAAEM,OAAO,EAAEF,GAAG,CAACE,OAAO;MAAEC,IAAI,EAAEH,GAAG,CAACG;IAAI,CAAE,CAAC;EAC1D,CAAC,CAAC;EAEF,OAAOP,OAAO;AAChB;AAGA,SAASd,UAAUA,CAACc,OAAe;EACjCvB,kBAAkB,CAAC4B,kBAAkB,CAACL,OAAO,CAAC;AAChD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}