{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar TurboModuleRegistry = _interopRequireWildcard(require(\"../TurboModule/TurboModuleRegistry\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar Platform = require('../Utilities/Platform');\nvar NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');\nvar ExceptionsManager = {\n  reportFatalException: function reportFatalException(message, stack, exceptionId) {\n    NativeModule.reportFatalException(message, stack, exceptionId);\n  },\n  reportSoftException: function reportSoftException(message, stack, exceptionId) {\n    NativeModule.reportSoftException(message, stack, exceptionId);\n  },\n  updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {\n    NativeModule.updateExceptionMessage(message, stack, exceptionId);\n  },\n  dismissRedbox: function dismissRedbox() {\n    if (Platform.OS !== 'ios' && NativeModule.dismissRedbox) {\n      NativeModule.dismissRedbox();\n    }\n  },\n  reportException: function reportException(data) {\n    if (NativeModule.reportException) {\n      NativeModule.reportException(data);\n      return;\n    }\n    if (data.isFatal) {\n      ExceptionsManager.reportFatalException(data.message, data.stack, data.id);\n    } else {\n      ExceptionsManager.reportSoftException(data.message, data.stack, data.id);\n    }\n  }\n};\nvar _default = exports.default = ExceptionsManager;","map":{"version":3,"names":["TurboModuleRegistry","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Platform","NativeModule","getEnforcing","ExceptionsManager","reportFatalException","message","stack","exceptionId","reportSoftException","updateExceptionMessage","dismissRedbox","OS","reportException","data","isFatal","id","_default","exports"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/react-native/Libraries/Core/NativeExceptionsManager.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\n\nconst Platform = require('../Utilities/Platform');\n\nexport type StackFrame = {|\n  column: ?number,\n  file: ?string,\n  lineNumber: ?number,\n  methodName: string,\n  collapse?: boolean,\n|};\nexport type ExceptionData = {\n  message: string,\n  originalMessage: ?string,\n  name: ?string,\n  componentStack: ?string,\n  stack: Array<StackFrame>,\n  id: number,\n  isFatal: boolean,\n  // flowlint-next-line unclear-type:off\n  extraData?: Object,\n  ...\n};\nexport interface Spec extends TurboModule {\n  // Deprecated: Use `reportException`\n  +reportFatalException: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  // Deprecated: Use `reportException`\n  +reportSoftException: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  +reportException?: (data: ExceptionData) => void;\n  +updateExceptionMessage: (\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) => void;\n  // TODO(T53311281): This is a noop on iOS now. Implement it.\n  +dismissRedbox?: () => void;\n}\n\nconst NativeModule =\n  TurboModuleRegistry.getEnforcing<Spec>('ExceptionsManager');\n\nconst ExceptionsManager = {\n  reportFatalException(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.reportFatalException(message, stack, exceptionId);\n  },\n  reportSoftException(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.reportSoftException(message, stack, exceptionId);\n  },\n  updateExceptionMessage(\n    message: string,\n    stack: Array<StackFrame>,\n    exceptionId: number,\n  ) {\n    NativeModule.updateExceptionMessage(message, stack, exceptionId);\n  },\n  dismissRedbox(): void {\n    if (Platform.OS !== 'ios' && NativeModule.dismissRedbox) {\n      // TODO(T53311281): This is a noop on iOS now. Implement it.\n      NativeModule.dismissRedbox();\n    }\n  },\n  reportException(data: ExceptionData): void {\n    if (NativeModule.reportException) {\n      NativeModule.reportException(data);\n      return;\n    }\n    if (data.isFatal) {\n      ExceptionsManager.reportFatalException(data.message, data.stack, data.id);\n    } else {\n      ExceptionsManager.reportSoftException(data.message, data.stack, data.id);\n    }\n  },\n};\n\nexport default ExceptionsManager;\n"],"mappings":";;;;AAYA,IAAAA,mBAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA0E,SAAAD,wBAAAE,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAJ,uBAAA,YAAAA,wBAAAE,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAE1E,IAAMmB,QAAQ,GAAGrB,OAAO,CAAC,uBAAuB,CAAC;AA4CjD,IAAMsB,YAAY,GAChBxB,mBAAmB,CAACyB,YAAY,CAAO,mBAAmB,CAAC;AAE7D,IAAMC,iBAAiB,GAAG;EACxBC,oBAAoB,WAApBA,oBAAoBA,CAClBC,OAAe,EACfC,KAAwB,EACxBC,WAAmB,EACnB;IACAN,YAAY,CAACG,oBAAoB,CAACC,OAAO,EAAEC,KAAK,EAAEC,WAAW,CAAC;EAChE,CAAC;EACDC,mBAAmB,WAAnBA,mBAAmBA,CACjBH,OAAe,EACfC,KAAwB,EACxBC,WAAmB,EACnB;IACAN,YAAY,CAACO,mBAAmB,CAACH,OAAO,EAAEC,KAAK,EAAEC,WAAW,CAAC;EAC/D,CAAC;EACDE,sBAAsB,WAAtBA,sBAAsBA,CACpBJ,OAAe,EACfC,KAAwB,EACxBC,WAAmB,EACnB;IACAN,YAAY,CAACQ,sBAAsB,CAACJ,OAAO,EAAEC,KAAK,EAAEC,WAAW,CAAC;EAClE,CAAC;EACDG,aAAa,WAAbA,aAAaA,CAAA,EAAS;IACpB,IAAIV,QAAQ,CAACW,EAAE,KAAK,KAAK,IAAIV,YAAY,CAACS,aAAa,EAAE;MAEvDT,YAAY,CAACS,aAAa,CAAC,CAAC;IAC9B;EACF,CAAC;EACDE,eAAe,WAAfA,eAAeA,CAACC,IAAmB,EAAQ;IACzC,IAAIZ,YAAY,CAACW,eAAe,EAAE;MAChCX,YAAY,CAACW,eAAe,CAACC,IAAI,CAAC;MAClC;IACF;IACA,IAAIA,IAAI,CAACC,OAAO,EAAE;MAChBX,iBAAiB,CAACC,oBAAoB,CAACS,IAAI,CAACR,OAAO,EAAEQ,IAAI,CAACP,KAAK,EAAEO,IAAI,CAACE,EAAE,CAAC;IAC3E,CAAC,MAAM;MACLZ,iBAAiB,CAACK,mBAAmB,CAACK,IAAI,CAACR,OAAO,EAAEQ,IAAI,CAACP,KAAK,EAAEO,IAAI,CAACE,EAAE,CAAC;IAC1E;EACF;AACF,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAA3B,OAAA,GAEaa,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}