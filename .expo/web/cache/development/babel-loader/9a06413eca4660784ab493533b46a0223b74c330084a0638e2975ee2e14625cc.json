{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stjones\\\\Desktop\\\\Ra_App\\\\src\\\\screens\\\\CreatePartyScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { colors } from '../constants/colors';\nimport { createPartyStream } from '../lib/api';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePartyScreen = ({\n  navigation\n}) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [privacy, setPrivacy] = useState('public');\n  const [loading, setLoading] = useState(false);\n  const handleCreateParty = async () => {\n    setLoading(true);\n    const {\n      data: {\n        session\n      }\n    } = await supabase.auth.getSession();\n    if (session?.user) {\n      await createPartyStream({\n        creator_id: session.user.id,\n        title,\n        description,\n        category,\n        privacy_level: privacy\n      });\n      navigation.goBack();\n    }\n    setLoading(false);\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Create a Party Stream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Title\",\n      value: title,\n      onChangeText: setTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Description\",\n      value: description,\n      onChangeText: setDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Category\",\n      value: category,\n      onChangeText: setCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Create Party\",\n      onPress: handleCreateParty,\n      disabled: loading,\n      color: colors.turquoise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: colors.white\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.darkGray,\n    marginBottom: 24\n  },\n  input: {\n    height: 50,\n    borderColor: colors.lightGray,\n    borderWidth: 1,\n    borderRadius: 8,\n    marginBottom: 16,\n    paddingHorizontal: 12,\n    fontSize: 16\n  }\n});\nexport default CreatePartyScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","colors","createPartyStream","supabase","jsxDEV","_jsxDEV","CreatePartyScreen","navigation","title","setTitle","description","setDescription","category","setCategory","privacy","setPrivacy","loading","setLoading","handleCreateParty","data","session","auth","getSession","user","creator_id","id","privacy_level","goBack","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","input","placeholder","value","onChangeText","onPress","disabled","color","turquoise","create","flex","padding","backgroundColor","white","fontSize","fontWeight","darkGray","marginBottom","height","borderColor","lightGray","borderWidth","borderRadius","paddingHorizontal"],"sources":["C:/Users/stjones/Desktop/Ra_App/src/screens/CreatePartyScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\nimport { colors } from '../constants/colors';\r\nimport { createPartyStream } from '../lib/api';\r\nimport { supabase } from '../lib/supabase';\r\n\r\nconst CreatePartyScreen = ({ navigation }: { navigation: any }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [privacy, setPrivacy] = useState<'public' | 'private'>('public');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleCreateParty = async () => {\r\n    setLoading(true);\r\n    const { data: { session } } = await supabase.auth.getSession();\r\n    if (session?.user) {\r\n      await createPartyStream({\r\n        creator_id: session.user.id,\r\n        title,\r\n        description,\r\n        category,\r\n        privacy_level: privacy,\r\n      });\r\n      navigation.goBack();\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Create a Party Stream</Text>\r\n      <TextInput style={styles.input} placeholder=\"Title\" value={title} onChangeText={setTitle} />\r\n      <TextInput style={styles.input} placeholder=\"Description\" value={description} onChangeText={setDescription} />\r\n      <TextInput style={styles.input} placeholder=\"Category\" value={category} onChangeText={setCategory} />\r\n      {/* Add a picker for privacy level here */}\r\n      <Button title=\"Create Party\" onPress={handleCreateParty} disabled={loading} color={colors.turquoise} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: colors.white,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: colors.darkGray,\r\n    marginBottom: 24,\r\n  },\r\n  input: {\r\n    height: 50,\r\n    borderColor: colors.lightGray,\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n    paddingHorizontal: 12,\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default CreatePartyScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}