{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.getEnforcing = getEnforcing;\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar NativeModules = require('../BatchedBridge/NativeModules');\nvar turboModuleProxy = global.__turboModuleProxy;\nfunction requireModule(name) {\n  if (global.RN$Bridgeless !== true) {\n    var legacyModule = NativeModules[name];\n    if (legacyModule != null) {\n      return legacyModule;\n    }\n  }\n  if (turboModuleProxy != null) {\n    var module = turboModuleProxy(name);\n    return module;\n  }\n  return null;\n}\nfunction get(name) {\n  return requireModule(name);\n}\nfunction getEnforcing(name) {\n  var module = requireModule(name);\n  (0, _invariant.default)(module != null, `TurboModuleRegistry.getEnforcing(...): '${name}' could not be found. ` + 'Verify that a module by this name is registered in the native binary.');\n  return module;\n}","map":{"version":3,"names":["_invariant","_interopRequireDefault","require","NativeModules","turboModuleProxy","global","__turboModuleProxy","requireModule","name","RN$Bridgeless","legacyModule","module","get","getEnforcing","invariant"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from './RCTExport';\n\nimport invariant from 'invariant';\n\nconst NativeModules = require('../BatchedBridge/NativeModules');\n\nconst turboModuleProxy = global.__turboModuleProxy;\n\nfunction requireModule<T: TurboModule>(name: string): ?T {\n  // Bridgeless mode requires TurboModules\n  if (global.RN$Bridgeless !== true) {\n    // Backward compatibility layer during migration.\n    const legacyModule = NativeModules[name];\n    if (legacyModule != null) {\n      return ((legacyModule: $FlowFixMe): T);\n    }\n  }\n\n  if (turboModuleProxy != null) {\n    const module: ?T = turboModuleProxy(name);\n    return module;\n  }\n\n  return null;\n}\n\nexport function get<T: TurboModule>(name: string): ?T {\n  return requireModule<T>(name);\n}\n\nexport function getEnforcing<T: TurboModule>(name: string): T {\n  const module = requireModule<T>(name);\n  invariant(\n    module != null,\n    `TurboModuleRegistry.getEnforcing(...): '${name}' could not be found. ` +\n      'Verify that a module by this name is registered in the native binary.',\n  );\n  return module;\n}\n"],"mappings":";;;;;;AAYA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAMC,aAAa,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAE/D,IAAME,gBAAgB,GAAGC,MAAM,CAACC,kBAAkB;AAElD,SAASC,aAAaA,CAAiBC,IAAY,EAAM;EAEvD,IAAIH,MAAM,CAACI,aAAa,KAAK,IAAI,EAAE;IAEjC,IAAMC,YAAY,GAAGP,aAAa,CAACK,IAAI,CAAC;IACxC,IAAIE,YAAY,IAAI,IAAI,EAAE;MACxB,OAASA,YAAY;IACvB;EACF;EAEA,IAAIN,gBAAgB,IAAI,IAAI,EAAE;IAC5B,IAAMO,MAAU,GAAGP,gBAAgB,CAACI,IAAI,CAAC;IACzC,OAAOG,MAAM;EACf;EAEA,OAAO,IAAI;AACb;AAEO,SAASC,GAAGA,CAAiBJ,IAAY,EAAM;EACpD,OAAOD,aAAa,CAAIC,IAAI,CAAC;AAC/B;AAEO,SAASK,YAAYA,CAAiBL,IAAY,EAAK;EAC5D,IAAMG,MAAM,GAAGJ,aAAa,CAAIC,IAAI,CAAC;EACrC,IAAAM,kBAAS,EACPH,MAAM,IAAI,IAAI,EACd,2CAA2CH,IAAI,wBAAwB,GACrE,uEACJ,CAAC;EACD,OAAOG,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}