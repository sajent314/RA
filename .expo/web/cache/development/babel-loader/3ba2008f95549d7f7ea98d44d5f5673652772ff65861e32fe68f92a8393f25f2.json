{"ast":null,"code":"import { supabase } from './supabase';\nexport const getTrendingContent = async () => {\n  const {\n    data,\n    error\n  } = await supabase.rpc('get_trending_submissions');\n  if (error) {\n    console.error('Error fetching trending content:', error);\n    return [];\n  }\n  const submissionIds = data.map(item => item.submission_id);\n  const {\n    data: submissions,\n    error: submissionsError\n  } = await supabase.from('challenge_submissions').select('*, profiles(*)').in('id', submissionIds);\n  if (submissionsError) {\n    console.error('Error fetching trending submissions:', submissionsError);\n    return [];\n  }\n  return submissions;\n};\nexport const getNewGoodEnergyCreators = async () => {\n  const {\n    data,\n    error\n  } = await supabase.from('profiles').select('*').eq('is_verified', true).order('created_at', {\n    ascending: false\n  }).limit(5);\n  if (error) {\n    console.error('Error fetching new good energy creators:', error);\n    return [];\n  }\n  return data;\n};\nexport const getUsersWithSimilarInterests = async userId => {\n  const {\n    data: currentUser,\n    error: currentUserError\n  } = await supabase.from('profiles').select('interests').eq('id', userId).single();\n  if (currentUserError || !currentUser) {\n    console.error('Error fetching current user interests:', currentUserError);\n    return [];\n  }\n  const {\n    data,\n    error\n  } = await supabase.from('profiles').select('*').neq('id', userId).overlaps('interests', currentUser.interests).limit(10);\n  if (error) {\n    console.error('Error fetching users with similar interests:', error);\n    return [];\n  }\n  return data;\n};","map":{"version":3,"names":["supabase","getTrendingContent","data","error","rpc","console","submissionIds","map","item","submission_id","submissions","submissionsError","from","select","in","getNewGoodEnergyCreators","eq","order","ascending","limit","getUsersWithSimilarInterests","userId","currentUser","currentUserError","single","neq","overlaps","interests"],"sources":["C:/Users/stjones/Desktop/Ra_App/src/lib/ExploreService.ts"],"sourcesContent":["import { supabase } from './supabase';\r\n\r\n// --- Positive Energy Trending ---\r\nexport const getTrendingContent = async () => {\r\n  const { data, error } = await supabase.rpc('get_trending_submissions');\r\n\r\n  if (error) {\r\n    console.error('Error fetching trending content:', error);\r\n    return [];\r\n  }\r\n\r\n  const submissionIds = data.map((item: any) => item.submission_id);\r\n  const { data: submissions, error: submissionsError } = await supabase\r\n    .from('challenge_submissions')\r\n    .select('*, profiles(*)')\r\n    .in('id', submissionIds);\r\n\r\n  if (submissionsError) {\r\n    console.error('Error fetching trending submissions:', submissionsError);\r\n    return [];\r\n  }\r\n\r\n  return submissions;\r\n};\r\n\r\n// --- Discovery ---\r\nexport const getNewGoodEnergyCreators = async () => {\r\n  const { data, error } = await supabase\r\n    .from('profiles')\r\n    .select('*')\r\n    .eq('is_verified', true)\r\n    .order('created_at', { ascending: false })\r\n    .limit(5);\r\n\r\n  if (error) {\r\n    console.error('Error fetching new good energy creators:', error);\r\n    return [];\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const getUsersWithSimilarInterests = async (userId: string) => {\r\n  const { data: currentUser, error: currentUserError } = await supabase\r\n    .from('profiles')\r\n    .select('interests')\r\n    .eq('id', userId)\r\n    .single();\r\n\r\n  if (currentUserError || !currentUser) {\r\n    console.error('Error fetching current user interests:', currentUserError);\r\n    return [];\r\n  }\r\n\r\n  const { data, error } = await supabase\r\n    .from('profiles')\r\n    .select('*')\r\n    .neq('id', userId)\r\n    .overlaps('interests', currentUser.interests)\r\n    .limit(10);\r\n\r\n  if (error) {\r\n    console.error('Error fetching users with similar interests:', error);\r\n    return [];\r\n  }\r\n  return data;\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AAGrC,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMH,QAAQ,CAACI,GAAG,CAAC,0BAA0B,CAAC;EAEtE,IAAID,KAAK,EAAE;IACTE,OAAO,CAACF,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,EAAE;EACX;EAEA,MAAMG,aAAa,GAAGJ,IAAI,CAACK,GAAG,CAAEC,IAAS,IAAKA,IAAI,CAACC,aAAa,CAAC;EACjE,MAAM;IAAEP,IAAI,EAAEQ,WAAW;IAAEP,KAAK,EAAEQ;EAAiB,CAAC,GAAG,MAAMX,QAAQ,CAClEY,IAAI,CAAC,uBAAuB,CAAC,CAC7BC,MAAM,CAAC,gBAAgB,CAAC,CACxBC,EAAE,CAAC,IAAI,EAAER,aAAa,CAAC;EAE1B,IAAIK,gBAAgB,EAAE;IACpBN,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAEQ,gBAAgB,CAAC;IACvE,OAAO,EAAE;EACX;EAEA,OAAOD,WAAW;AACpB,CAAC;AAGD,OAAO,MAAMK,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAClD,MAAM;IAAEb,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMH,QAAQ,CACnCY,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXG,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,CACvBC,KAAK,CAAC,YAAY,EAAE;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC,CACzCC,KAAK,CAAC,CAAC,CAAC;EAEX,IAAIhB,KAAK,EAAE;IACTE,OAAO,CAACF,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAChE,OAAO,EAAE;EACX;EACA,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAMkB,4BAA4B,GAAG,MAAOC,MAAc,IAAK;EACpE,MAAM;IAAEnB,IAAI,EAAEoB,WAAW;IAAEnB,KAAK,EAAEoB;EAAiB,CAAC,GAAG,MAAMvB,QAAQ,CAClEY,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,WAAW,CAAC,CACnBG,EAAE,CAAC,IAAI,EAAEK,MAAM,CAAC,CAChBG,MAAM,CAAC,CAAC;EAEX,IAAID,gBAAgB,IAAI,CAACD,WAAW,EAAE;IACpCjB,OAAO,CAACF,KAAK,CAAC,wCAAwC,EAAEoB,gBAAgB,CAAC;IACzE,OAAO,EAAE;EACX;EAEA,MAAM;IAAErB,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMH,QAAQ,CACnCY,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXY,GAAG,CAAC,IAAI,EAAEJ,MAAM,CAAC,CACjBK,QAAQ,CAAC,WAAW,EAAEJ,WAAW,CAACK,SAAS,CAAC,CAC5CR,KAAK,CAAC,EAAE,CAAC;EAEZ,IAAIhB,KAAK,EAAE;IACTE,OAAO,CAACF,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACpE,OAAO,EAAE;EACX;EACA,OAAOD,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}