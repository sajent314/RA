{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar PressabilityDebug = _interopRequireWildcard(require(\"../Pressability/PressabilityDebug\"));\nvar _usePressability = _interopRequireDefault(require(\"../Pressability/usePressability\"));\nvar _flattenStyle = _interopRequireDefault(require(\"../StyleSheet/flattenStyle\"));\nvar _processColor = _interopRequireDefault(require(\"../StyleSheet/processColor\"));\nvar _AcessibilityMapping = require(\"../Utilities/AcessibilityMapping\");\nvar _Platform = _interopRequireDefault(require(\"../Utilities/Platform\"));\nvar _TextAncestor = _interopRequireDefault(require(\"./TextAncestor\"));\nvar _TextNativeComponent = require(\"./TextNativeComponent\");\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar React = _react;\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _excluded = [\"accessible\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityState\", \"allowFontScaling\", \"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-label\", \"aria-selected\", \"ellipsizeMode\", \"id\", \"nativeID\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onResponderGrant\", \"onResponderMove\", \"onResponderRelease\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onStartShouldSetResponder\", \"pressRetentionOffset\", \"role\", \"suppressHighlighting\"];\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\stjones\\\\Desktop\\\\Ra_App\\\\node_modules\\\\react-native\\\\Libraries\\\\Text\\\\Text.js\";\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar Text = React.forwardRef(function (props, forwardedRef) {\n  var _accessibilityState2, _accessibilityState3, _style, _style3, _style4;\n  var accessible = props.accessible,\n    accessibilityLabel = props.accessibilityLabel,\n    accessibilityRole = props.accessibilityRole,\n    accessibilityState = props.accessibilityState,\n    allowFontScaling = props.allowFontScaling,\n    ariaBusy = props['aria-busy'],\n    ariaChecked = props['aria-checked'],\n    ariaDisabled = props['aria-disabled'],\n    ariaExpanded = props['aria-expanded'],\n    ariaLabel = props['aria-label'],\n    ariaSelected = props['aria-selected'],\n    ellipsizeMode = props.ellipsizeMode,\n    id = props.id,\n    nativeID = props.nativeID,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    _onPressIn = props.onPressIn,\n    _onPressOut = props.onPressOut,\n    _onResponderGrant = props.onResponderGrant,\n    _onResponderMove = props.onResponderMove,\n    _onResponderRelease = props.onResponderRelease,\n    _onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    pressRetentionOffset = props.pressRetentionOffset,\n    role = props.role,\n    suppressHighlighting = props.suppressHighlighting,\n    restProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n  var _useState = (0, _react.useState)(false),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    isHighlighted = _useState2[0],\n    setHighlighted = _useState2[1];\n  var _accessibilityState;\n  if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {\n    _accessibilityState = {\n      busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? void 0 : accessibilityState.busy,\n      checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? void 0 : accessibilityState.checked,\n      disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? void 0 : accessibilityState.disabled,\n      expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? void 0 : accessibilityState.expanded,\n      selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? void 0 : accessibilityState.selected\n    };\n  }\n  var _disabled = restProps.disabled != null ? restProps.disabled : (_accessibilityState2 = _accessibilityState) == null ? void 0 : _accessibilityState2.disabled;\n  var nativeTextAccessibilityState = _disabled !== ((_accessibilityState3 = _accessibilityState) == null ? void 0 : _accessibilityState3.disabled) ? Object.assign({}, _accessibilityState, {\n    disabled: _disabled\n  }) : _accessibilityState;\n  var isPressable = (onPress != null || onLongPress != null || onStartShouldSetResponder != null) && _disabled !== true;\n  var initialized = useLazyInitialization(isPressable);\n  var config = (0, _react.useMemo)(function () {\n    return initialized ? {\n      disabled: !isPressable,\n      pressRectOffset: pressRetentionOffset,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressIn: function onPressIn(event) {\n        setHighlighted(!suppressHighlighting);\n        _onPressIn == null ? void 0 : _onPressIn(event);\n      },\n      onPressOut: function onPressOut(event) {\n        setHighlighted(false);\n        _onPressOut == null ? void 0 : _onPressOut(event);\n      },\n      onResponderTerminationRequest_DEPRECATED: onResponderTerminationRequest,\n      onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder\n    } : null;\n  }, [initialized, isPressable, pressRetentionOffset, onLongPress, onPress, _onPressIn, _onPressOut, onResponderTerminationRequest, onStartShouldSetResponder, suppressHighlighting]);\n  var eventHandlers = (0, _usePressability.default)(config);\n  var eventHandlersForText = (0, _react.useMemo)(function () {\n    return eventHandlers == null ? null : {\n      onResponderGrant: function onResponderGrant(event) {\n        eventHandlers.onResponderGrant(event);\n        if (_onResponderGrant != null) {\n          _onResponderGrant(event);\n        }\n      },\n      onResponderMove: function onResponderMove(event) {\n        eventHandlers.onResponderMove(event);\n        if (_onResponderMove != null) {\n          _onResponderMove(event);\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        eventHandlers.onResponderRelease(event);\n        if (_onResponderRelease != null) {\n          _onResponderRelease(event);\n        }\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        eventHandlers.onResponderTerminate(event);\n        if (_onResponderTerminate != null) {\n          _onResponderTerminate(event);\n        }\n      },\n      onClick: eventHandlers.onClick,\n      onResponderTerminationRequest: eventHandlers.onResponderTerminationRequest,\n      onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder\n    };\n  }, [eventHandlers, _onResponderGrant, _onResponderMove, _onResponderRelease, _onResponderTerminate]);\n  var selectionColor = restProps.selectionColor == null ? null : (0, _processColor.default)(restProps.selectionColor);\n  var style = restProps.style;\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = [restProps.style, {\n        color: 'magenta'\n      }];\n    }\n  }\n  var numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(`'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`);\n    numberOfLines = 0;\n  }\n  var hasTextAncestor = (0, _react.useContext)(_TextAncestor.default);\n  var _accessible = _Platform.default.select({\n    ios: accessible !== false,\n    default: accessible\n  });\n  style = (0, _flattenStyle.default)(style);\n  if (typeof ((_style = style) == null ? void 0 : _style.fontWeight) === 'number') {\n    var _style2;\n    style.fontWeight = (_style2 = style) == null ? void 0 : _style2.fontWeight.toString();\n  }\n  var _selectable = restProps.selectable;\n  if (((_style3 = style) == null ? void 0 : _style3.userSelect) != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n    delete style.userSelect;\n  }\n  if (((_style4 = style) == null ? void 0 : _style4.verticalAlign) != null) {\n    style.textAlignVertical = verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n    delete style.verticalAlign;\n  }\n  var _hasOnPressOrOnLongPress = props.onPress != null || props.onLongPress != null;\n  return hasTextAncestor ? (0, _jsxRuntime.jsx)(_TextNativeComponent.NativeVirtualText, Object.assign({}, restProps, eventHandlersForText, {\n    accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n    accessibilityRole: role ? (0, _AcessibilityMapping.getAccessibilityRoleFromRole)(role) : accessibilityRole,\n    accessibilityState: _accessibilityState,\n    isHighlighted: isHighlighted,\n    isPressable: isPressable,\n    nativeID: id != null ? id : nativeID,\n    numberOfLines: numberOfLines,\n    ref: forwardedRef,\n    selectable: _selectable,\n    selectionColor: selectionColor,\n    style: style\n  })) : (0, _jsxRuntime.jsx)(_TextAncestor.default.Provider, {\n    value: true,\n    children: (0, _jsxRuntime.jsx)(_TextNativeComponent.NativeText, Object.assign({}, restProps, eventHandlersForText, {\n      accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n      accessibilityRole: role ? (0, _AcessibilityMapping.getAccessibilityRoleFromRole)(role) : accessibilityRole,\n      accessibilityState: nativeTextAccessibilityState,\n      accessible: accessible == null && _Platform.default.OS === 'android' ? _hasOnPressOrOnLongPress : _accessible,\n      allowFontScaling: allowFontScaling !== false,\n      disabled: _disabled,\n      ellipsizeMode: ellipsizeMode != null ? ellipsizeMode : 'tail',\n      isHighlighted: isHighlighted,\n      nativeID: id != null ? id : nativeID,\n      numberOfLines: numberOfLines,\n      ref: forwardedRef,\n      selectable: _selectable,\n      selectionColor: selectionColor,\n      style: style\n    }))\n  });\n});\nText.displayName = 'Text';\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\nfunction useLazyInitialization(newValue) {\n  var _useState3 = (0, _react.useState)(newValue),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    oldValue = _useState4[0],\n    setValue = _useState4[1];\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\nvar userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true\n};\nvar verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center'\n};\nmodule.exports = Text;","map":{"version":3,"names":["PressabilityDebug","_interopRequireWildcard","require","_usePressability","_interopRequireDefault","_flattenStyle","_processColor","_AcessibilityMapping","_Platform","_TextAncestor","_TextNativeComponent","_react","React","_jsxRuntime","_excluded","_this","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Text","forwardRef","props","forwardedRef","_accessibilityState2","_accessibilityState3","_style","_style3","_style4","accessible","accessibilityLabel","accessibilityRole","accessibilityState","allowFontScaling","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","ellipsizeMode","id","nativeID","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","role","suppressHighlighting","restProps","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","isHighlighted","setHighlighted","_accessibilityState","busy","checked","disabled","expanded","selected","_disabled","nativeTextAccessibilityState","assign","isPressable","initialized","useLazyInitialization","config","useMemo","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","usePressability","eventHandlersForText","onClick","selectionColor","processColor","style","__DEV__","isEnabled","color","numberOfLines","console","error","hasTextAncestor","useContext","TextAncestor","_accessible","Platform","select","ios","flattenStyle","fontWeight","_style2","toString","_selectable","selectable","userSelect","userSelectToSelectableMap","verticalAlign","textAlignVertical","verticalAlignToTextAlignVerticalMap","_hasOnPressOrOnLongPress","jsx","NativeVirtualText","getAccessibilityRoleFromRole","ref","Provider","value","children","NativeText","OS","displayName","propTypes","TextPropTypes","newValue","_useState3","_useState4","oldValue","setValue","auto","text","none","contain","all","top","bottom","middle","module","exports"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/react-native/Libraries/Text/Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {TextProps} from './TextProps';\n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport processColor from '../StyleSheet/processColor';\nimport {getAccessibilityRoleFromRole} from '../Utilities/AcessibilityMapping';\nimport Platform from '../Utilities/Platform';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    accessibilityLabel,\n    accessibilityRole,\n    accessibilityState,\n    allowFontScaling,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-label': ariaLabel,\n    'aria-selected': ariaSelected,\n    ellipsizeMode,\n    id,\n    nativeID,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    role,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  let _accessibilityState;\n  if (\n    accessibilityState != null ||\n    ariaBusy != null ||\n    ariaChecked != null ||\n    ariaDisabled != null ||\n    ariaExpanded != null ||\n    ariaSelected != null\n  ) {\n    _accessibilityState = {\n      busy: ariaBusy ?? accessibilityState?.busy,\n      checked: ariaChecked ?? accessibilityState?.checked,\n      disabled: ariaDisabled ?? accessibilityState?.disabled,\n      expanded: ariaExpanded ?? accessibilityState?.expanded,\n      selected: ariaSelected ?? accessibilityState?.selected,\n    };\n  }\n\n  const _disabled =\n    restProps.disabled != null\n      ? restProps.disabled\n      : _accessibilityState?.disabled;\n\n  const nativeTextAccessibilityState =\n    _disabled !== _accessibilityState?.disabled\n      ? {..._accessibilityState, disabled: _disabled}\n      : _accessibilityState;\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    _disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event: PressEvent) {\n              setHighlighted(!suppressHighlighting);\n              onPressIn?.(event);\n            },\n            onPressOut(event: PressEvent) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event: PressEvent) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event: PressEvent) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event: PressEvent) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event: PressEvent) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onClick: eventHandlers.onClick,\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = restProps.style;\n\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = [restProps.style, {color: 'magenta'}];\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  const _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible,\n  });\n\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n  style = flattenStyle(style);\n\n  if (typeof style?.fontWeight === 'number') {\n    style.fontWeight = style?.fontWeight.toString();\n  }\n\n  let _selectable = restProps.selectable;\n  if (style?.userSelect != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n    delete style.userSelect;\n  }\n\n  if (style?.verticalAlign != null) {\n    style.textAlignVertical =\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n    delete style.verticalAlign;\n  }\n\n  const _hasOnPressOrOnLongPress =\n    props.onPress != null || props.onLongPress != null;\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      {...eventHandlersForText}\n      accessibilityLabel={ariaLabel ?? accessibilityLabel}\n      accessibilityRole={\n        role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n      }\n      accessibilityState={_accessibilityState}\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      nativeID={id ?? nativeID}\n      numberOfLines={numberOfLines}\n      ref={forwardedRef}\n      selectable={_selectable}\n      selectionColor={selectionColor}\n      style={style}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        accessibilityRole={\n          role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n        }\n        accessibilityState={nativeTextAccessibilityState}\n        accessible={\n          accessible == null && Platform.OS === 'android'\n            ? _hasOnPressOrOnLongPress\n            : _accessible\n        }\n        allowFontScaling={allowFontScaling !== false}\n        disabled={_disabled}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        nativeID={id ?? nativeID}\n        numberOfLines={numberOfLines}\n        ref={forwardedRef}\n        selectable={_selectable}\n        selectionColor={selectionColor}\n        style={style}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nconst userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true,\n};\n\nconst verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center',\n};\n\nmodule.exports = Text;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}