{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _Platform = _interopRequireDefault(require(\"../Utilities/Platform\"));\nif (__DEV__) {\n  require('./setUpReactDevTools');\n  var JSInspector = require('../JSInspector/JSInspector');\n  JSInspector.registerAgent(require('../JSInspector/NetworkAgent'));\n  var isLikelyARealBrowser = global.navigator != null && global.navigator.appName === 'Netscape';\n  if (!_Platform.default.isTesting) {\n    var HMRClient = require('../Utilities/HMRClient');\n    if (console._isPolyfilled) {\n      ['trace', 'info', 'warn', 'error', 'log', 'group', 'groupCollapsed', 'groupEnd', 'debug'].forEach(function (level) {\n        var originalFunction = console[level];\n        console[level] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          HMRClient.log(level, args);\n          originalFunction.apply(console, args);\n        };\n      });\n    } else {\n      HMRClient.log('log', [`JavaScript logs will appear in your ${isLikelyARealBrowser ? 'browser' : 'environment'} console`]);\n    }\n  }\n  require('./setUpReactRefresh');\n}","map":{"version":3,"names":["_Platform","_interopRequireDefault","require","__DEV__","JSInspector","registerAgent","isLikelyARealBrowser","global","navigator","appName","Platform","isTesting","HMRClient","console","_isPolyfilled","forEach","level","originalFunction","_len","arguments","length","args","Array","_key","log","apply"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/react-native/Libraries/Core/setUpDeveloperTools.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\ndeclare var console: typeof console & {_isPolyfilled: boolean, ...};\n\n/**\n * Sets up developer tools for React Native.\n * You can use this module directly, or just require InitializeCore.\n */\nif (__DEV__) {\n  require('./setUpReactDevTools');\n\n  // Set up inspector\n  const JSInspector = require('../JSInspector/JSInspector');\n  JSInspector.registerAgent(require('../JSInspector/NetworkAgent'));\n\n  // Note we can't check if console is \"native\" because it would appear \"native\" in JSC and Hermes.\n  // We also can't check any properties that don't exist in the Chrome worker environment.\n  // So we check a navigator property that's set to a particular value (\"Netscape\") in all real browsers.\n  const isLikelyARealBrowser =\n    global.navigator != null &&\n    /*              _\n     *             | |\n     *   _ __   ___| |_ ___  ___ __ _ _ __   ___\n     *  | '_ \\ / _ \\ __/ __|/ __/ _` | '_ \\ / _ \\\n     *  | | | |  __/ |_\\__ \\ (_| (_| | |_) |  __/\n     *  |_| |_|\\___|\\__|___/\\___\\__,_| .__/ \\___|\n     *                               | |\n     *                               |_|\n     */\n    global.navigator.appName === 'Netscape'; // Any real browser\n\n  if (!Platform.isTesting) {\n    const HMRClient = require('../Utilities/HMRClient');\n\n    if (console._isPolyfilled) {\n      // We assume full control over the console and send JavaScript logs to Metro.\n      [\n        'trace',\n        'info',\n        'warn',\n        'error',\n        'log',\n        'group',\n        'groupCollapsed',\n        'groupEnd',\n        'debug',\n      ].forEach(level => {\n        const originalFunction = console[level];\n        console[level] = function (...args: $ReadOnlyArray<mixed>) {\n          HMRClient.log(level, args);\n          originalFunction.apply(console, args);\n        };\n      });\n    } else {\n      // We assume the environment has a real rich console (like Chrome), and don't hijack it to log to Metro.\n      // It's likely the developer is using rich console to debug anyway, and hijacking it would\n      // lose the filenames in console.log calls: https://github.com/facebook/react-native/issues/26788.\n      HMRClient.log('log', [\n        `JavaScript logs will appear in your ${\n          isLikelyARealBrowser ? 'browser' : 'environment'\n        } console`,\n      ]);\n    }\n  }\n\n  require('./setUpReactRefresh');\n}\n"],"mappings":";AAUA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AAQA,IAAIC,OAAO,EAAE;EACXD,OAAO,CAAC,sBAAsB,CAAC;EAG/B,IAAME,WAAW,GAAGF,OAAO,CAAC,4BAA4B,CAAC;EACzDE,WAAW,CAACC,aAAa,CAACH,OAAO,CAAC,6BAA6B,CAAC,CAAC;EAKjE,IAAMI,oBAAoB,GACxBC,MAAM,CAACC,SAAS,IAAI,IAAI,IAUxBD,MAAM,CAACC,SAAS,CAACC,OAAO,KAAK,UAAU;EAEzC,IAAI,CAACC,iBAAQ,CAACC,SAAS,EAAE;IACvB,IAAMC,SAAS,GAAGV,OAAO,CAAC,wBAAwB,CAAC;IAEnD,IAAIW,OAAO,CAACC,aAAa,EAAE;MAEzB,CACE,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,KAAK,EACL,OAAO,EACP,gBAAgB,EAChB,UAAU,EACV,OAAO,CACR,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAI;QACjB,IAAMC,gBAAgB,GAAGJ,OAAO,CAACG,KAAK,CAAC;QACvCH,OAAO,CAACG,KAAK,CAAC,GAAG,YAA0C;UAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAA7BC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;YAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;UAAA;UAChCX,SAAS,CAACY,GAAG,CAACR,KAAK,EAAEK,IAAI,CAAC;UAC1BJ,gBAAgB,CAACQ,KAAK,CAACZ,OAAO,EAAEQ,IAAI,CAAC;QACvC,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,MAAM;MAILT,SAAS,CAACY,GAAG,CAAC,KAAK,EAAE,CACnB,uCACElB,oBAAoB,GAAG,SAAS,GAAG,aAAa,UACxC,CACX,CAAC;IACJ;EACF;EAEAJ,OAAO,CAAC,qBAAqB,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}