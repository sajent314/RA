{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _NativeEventEmitter = _interopRequireDefault(require(\"../EventEmitter/NativeEventEmitter\"));\nvar _Platform = _interopRequireDefault(require(\"../Utilities/Platform\"));\nvar _NativeWebSocketModule = _interopRequireDefault(require(\"./NativeWebSocketModule\"));\nvar _base64Js = _interopRequireDefault(require(\"base64-js\"));\nvar originalRCTWebSocketConnect = _NativeWebSocketModule.default.connect;\nvar originalRCTWebSocketSend = _NativeWebSocketModule.default.send;\nvar originalRCTWebSocketSendBinary = _NativeWebSocketModule.default.sendBinary;\nvar originalRCTWebSocketClose = _NativeWebSocketModule.default.close;\nvar eventEmitter;\nvar subscriptions;\nvar closeCallback;\nvar sendCallback;\nvar connectCallback;\nvar onOpenCallback;\nvar onMessageCallback;\nvar onErrorCallback;\nvar onCloseCallback;\nvar _isInterceptorEnabled = false;\nvar WebSocketInterceptor = {\n  setCloseCallback: function setCloseCallback(callback) {\n    closeCallback = callback;\n  },\n  setSendCallback: function setSendCallback(callback) {\n    sendCallback = callback;\n  },\n  setConnectCallback: function setConnectCallback(callback) {\n    connectCallback = callback;\n  },\n  setOnOpenCallback: function setOnOpenCallback(callback) {\n    onOpenCallback = callback;\n  },\n  setOnMessageCallback: function setOnMessageCallback(callback) {\n    onMessageCallback = callback;\n  },\n  setOnErrorCallback: function setOnErrorCallback(callback) {\n    onErrorCallback = callback;\n  },\n  setOnCloseCallback: function setOnCloseCallback(callback) {\n    onCloseCallback = callback;\n  },\n  isInterceptorEnabled: function isInterceptorEnabled() {\n    return _isInterceptorEnabled;\n  },\n  _unregisterEvents: function _unregisterEvents() {\n    subscriptions.forEach(function (e) {\n      return e.remove();\n    });\n    subscriptions = [];\n  },\n  _registerEvents: function _registerEvents() {\n    subscriptions = [eventEmitter.addListener('websocketMessage', function (ev) {\n      if (onMessageCallback) {\n        onMessageCallback(ev.id, ev.type === 'binary' ? WebSocketInterceptor._arrayBufferToString(ev.data) : ev.data);\n      }\n    }), eventEmitter.addListener('websocketOpen', function (ev) {\n      if (onOpenCallback) {\n        onOpenCallback(ev.id);\n      }\n    }), eventEmitter.addListener('websocketClosed', function (ev) {\n      if (onCloseCallback) {\n        onCloseCallback(ev.id, {\n          code: ev.code,\n          reason: ev.reason\n        });\n      }\n    }), eventEmitter.addListener('websocketFailed', function (ev) {\n      if (onErrorCallback) {\n        onErrorCallback(ev.id, {\n          message: ev.message\n        });\n      }\n    })];\n  },\n  enableInterception: function enableInterception() {\n    if (_isInterceptorEnabled) {\n      return;\n    }\n    eventEmitter = new _NativeEventEmitter.default(_Platform.default.OS !== 'ios' ? null : _NativeWebSocketModule.default);\n    WebSocketInterceptor._registerEvents();\n    _NativeWebSocketModule.default.connect = function (url, protocols, options, socketId) {\n      if (connectCallback) {\n        connectCallback(url, protocols, options, socketId);\n      }\n      originalRCTWebSocketConnect.apply(this, arguments);\n    };\n    _NativeWebSocketModule.default.send = function (data, socketId) {\n      if (sendCallback) {\n        sendCallback(data, socketId);\n      }\n      originalRCTWebSocketSend.apply(this, arguments);\n    };\n    _NativeWebSocketModule.default.sendBinary = function (data, socketId) {\n      if (sendCallback) {\n        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n      }\n      originalRCTWebSocketSendBinary.apply(this, arguments);\n    };\n    _NativeWebSocketModule.default.close = function () {\n      if (closeCallback) {\n        if (arguments.length === 3) {\n          closeCallback(arguments[0], arguments[1], arguments[2]);\n        } else {\n          closeCallback(null, null, arguments[0]);\n        }\n      }\n      originalRCTWebSocketClose.apply(this, arguments);\n    };\n    _isInterceptorEnabled = true;\n  },\n  _arrayBufferToString: function _arrayBufferToString(data) {\n    var value = _base64Js.default.toByteArray(data).buffer;\n    if (value === undefined || value === null) {\n      return '(no value)';\n    }\n    if (typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && value instanceof ArrayBuffer) {\n      return `ArrayBuffer {${String(Array.from(new Uint8Array(value)))}}`;\n    }\n    return value;\n  },\n  disableInterception: function disableInterception() {\n    if (!_isInterceptorEnabled) {\n      return;\n    }\n    _isInterceptorEnabled = false;\n    _NativeWebSocketModule.default.send = originalRCTWebSocketSend;\n    _NativeWebSocketModule.default.sendBinary = originalRCTWebSocketSendBinary;\n    _NativeWebSocketModule.default.close = originalRCTWebSocketClose;\n    _NativeWebSocketModule.default.connect = originalRCTWebSocketConnect;\n    connectCallback = null;\n    closeCallback = null;\n    sendCallback = null;\n    onOpenCallback = null;\n    onMessageCallback = null;\n    onCloseCallback = null;\n    onErrorCallback = null;\n    WebSocketInterceptor._unregisterEvents();\n  }\n};\nmodule.exports = WebSocketInterceptor;","map":{"version":3,"names":["_NativeEventEmitter","_interopRequireDefault","require","_Platform","_NativeWebSocketModule","_base64Js","originalRCTWebSocketConnect","NativeWebSocketModule","connect","originalRCTWebSocketSend","send","originalRCTWebSocketSendBinary","sendBinary","originalRCTWebSocketClose","close","eventEmitter","subscriptions","closeCallback","sendCallback","connectCallback","onOpenCallback","onMessageCallback","onErrorCallback","onCloseCallback","isInterceptorEnabled","WebSocketInterceptor","setCloseCallback","callback","setSendCallback","setConnectCallback","setOnOpenCallback","setOnMessageCallback","setOnErrorCallback","setOnCloseCallback","_unregisterEvents","forEach","e","remove","_registerEvents","addListener","ev","id","type","_arrayBufferToString","data","code","reason","message","enableInterception","NativeEventEmitter","Platform","OS","url","protocols","options","socketId","apply","arguments","length","value","base64","toByteArray","buffer","undefined","ArrayBuffer","Uint8Array","String","Array","from","disableInterception","module","exports"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/react-native/Libraries/WebSocket/WebSocketInterceptor.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport Platform from '../Utilities/Platform';\nimport NativeWebSocketModule from './NativeWebSocketModule';\nimport base64 from 'base64-js';\n\nconst originalRCTWebSocketConnect = NativeWebSocketModule.connect;\nconst originalRCTWebSocketSend = NativeWebSocketModule.send;\nconst originalRCTWebSocketSendBinary = NativeWebSocketModule.sendBinary;\nconst originalRCTWebSocketClose = NativeWebSocketModule.close;\n\nlet eventEmitter;\nlet subscriptions;\n\nlet closeCallback;\nlet sendCallback;\nlet connectCallback;\nlet onOpenCallback;\nlet onMessageCallback;\nlet onErrorCallback;\nlet onCloseCallback;\n\nlet isInterceptorEnabled = false;\n\n/**\n * A network interceptor which monkey-patches RCTWebSocketModule methods\n * to gather all websocket network requests/responses, in order to show\n * their information in the React Native inspector development tool.\n */\n\nconst WebSocketInterceptor = {\n  /**\n   * Invoked when RCTWebSocketModule.close(...) is called.\n   */\n  setCloseCallback(callback) {\n    closeCallback = callback;\n  },\n\n  /**\n   * Invoked when RCTWebSocketModule.send(...) or sendBinary(...) is called.\n   */\n  setSendCallback(callback) {\n    sendCallback = callback;\n  },\n\n  /**\n   * Invoked when RCTWebSocketModule.connect(...) is called.\n   */\n  setConnectCallback(callback) {\n    connectCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketOpen\" happens.\n   */\n  setOnOpenCallback(callback) {\n    onOpenCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketMessage\" happens.\n   */\n  setOnMessageCallback(callback) {\n    onMessageCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketFailed\" happens.\n   */\n  setOnErrorCallback(callback) {\n    onErrorCallback = callback;\n  },\n\n  /**\n   * Invoked when event \"websocketClosed\" happens.\n   */\n  setOnCloseCallback(callback) {\n    onCloseCallback = callback;\n  },\n\n  isInterceptorEnabled() {\n    return isInterceptorEnabled;\n  },\n\n  _unregisterEvents() {\n    subscriptions.forEach(e => e.remove());\n    subscriptions = [];\n  },\n\n  /**\n   * Add listeners to the RCTWebSocketModule events to intercept them.\n   */\n  _registerEvents() {\n    subscriptions = [\n      eventEmitter.addListener('websocketMessage', ev => {\n        if (onMessageCallback) {\n          onMessageCallback(\n            ev.id,\n            ev.type === 'binary'\n              ? WebSocketInterceptor._arrayBufferToString(ev.data)\n              : ev.data,\n          );\n        }\n      }),\n      eventEmitter.addListener('websocketOpen', ev => {\n        if (onOpenCallback) {\n          onOpenCallback(ev.id);\n        }\n      }),\n      eventEmitter.addListener('websocketClosed', ev => {\n        if (onCloseCallback) {\n          onCloseCallback(ev.id, {code: ev.code, reason: ev.reason});\n        }\n      }),\n      eventEmitter.addListener('websocketFailed', ev => {\n        if (onErrorCallback) {\n          onErrorCallback(ev.id, {message: ev.message});\n        }\n      }),\n    ];\n  },\n\n  enableInterception() {\n    if (isInterceptorEnabled) {\n      return;\n    }\n    eventEmitter = new NativeEventEmitter(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeWebSocketModule,\n    );\n    WebSocketInterceptor._registerEvents();\n\n    // Override `connect` method for all RCTWebSocketModule requests\n    // to intercept the request url, protocols, options and socketId,\n    // then pass them through the `connectCallback`.\n    NativeWebSocketModule.connect = function (\n      url,\n      protocols,\n      options,\n      socketId,\n    ) {\n      if (connectCallback) {\n        connectCallback(url, protocols, options, socketId);\n      }\n      originalRCTWebSocketConnect.apply(this, arguments);\n    };\n\n    // Override `send` method for all RCTWebSocketModule requests to intercept\n    // the data sent, then pass them through the `sendCallback`.\n    NativeWebSocketModule.send = function (data, socketId) {\n      if (sendCallback) {\n        sendCallback(data, socketId);\n      }\n      originalRCTWebSocketSend.apply(this, arguments);\n    };\n\n    // Override `sendBinary` method for all RCTWebSocketModule requests to\n    // intercept the data sent, then pass them through the `sendCallback`.\n    NativeWebSocketModule.sendBinary = function (data, socketId) {\n      if (sendCallback) {\n        sendCallback(WebSocketInterceptor._arrayBufferToString(data), socketId);\n      }\n      originalRCTWebSocketSendBinary.apply(this, arguments);\n    };\n\n    // Override `close` method for all RCTWebSocketModule requests to intercept\n    // the close information, then pass them through the `closeCallback`.\n    NativeWebSocketModule.close = function () {\n      if (closeCallback) {\n        if (arguments.length === 3) {\n          closeCallback(arguments[0], arguments[1], arguments[2]);\n        } else {\n          closeCallback(null, null, arguments[0]);\n        }\n      }\n      originalRCTWebSocketClose.apply(this, arguments);\n    };\n\n    isInterceptorEnabled = true;\n  },\n\n  _arrayBufferToString(data) {\n    const value = base64.toByteArray(data).buffer;\n    if (value === undefined || value === null) {\n      return '(no value)';\n    }\n    if (\n      typeof ArrayBuffer !== 'undefined' &&\n      typeof Uint8Array !== 'undefined' &&\n      value instanceof ArrayBuffer\n    ) {\n      return `ArrayBuffer {${String(Array.from(new Uint8Array(value)))}}`;\n    }\n    return value;\n  },\n\n  // Unpatch RCTWebSocketModule methods and remove the callbacks.\n  disableInterception() {\n    if (!isInterceptorEnabled) {\n      return;\n    }\n    isInterceptorEnabled = false;\n    NativeWebSocketModule.send = originalRCTWebSocketSend;\n    NativeWebSocketModule.sendBinary = originalRCTWebSocketSendBinary;\n    NativeWebSocketModule.close = originalRCTWebSocketClose;\n    NativeWebSocketModule.connect = originalRCTWebSocketConnect;\n\n    connectCallback = null;\n    closeCallback = null;\n    sendCallback = null;\n    onOpenCallback = null;\n    onMessageCallback = null;\n    onCloseCallback = null;\n    onErrorCallback = null;\n\n    WebSocketInterceptor._unregisterEvents();\n  },\n};\n\nmodule.exports = WebSocketInterceptor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}