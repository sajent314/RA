{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/expo-modules-core/src/ts-declarations/SharedRef.ts"],"sourcesContent":["import type { EventsMap } from './EventEmitter';\nimport type { SharedObject } from './SharedObject';\n\n/**\n * A {@link SharedObject} that holds a reference to any native object. Allows passing references\n * to native instances among different independent libraries.\n *\n * For instance, `ImageRef` from `expo-image` references a [Drawable](https://developer.android.com/reference/android/graphics/drawable/Drawable)\n * on Android and an [UIImage](https://developer.apple.com/documentation/uikit/uiimage) on iOS. Since both types are common on these platforms,\n * different native modules can use them without depending on each other. In particular, this enables the `expo-image-manipulator` to pass the resulted image\n * directly to the image view from `expo-image` without any additional writes and reads from the file system.\n */\nexport declare class SharedRef<\n    TNativeRefType extends string = 'unknown',\n    TEventsMap extends EventsMap = Record<never, never>,\n  >\n  extends SharedObject<TEventsMap>\n  implements SharedObject<TEventsMap>\n{\n  /**\n   * A dummy private property with the given generic type. It is required for TypeScript to correctly infer this subtype.\n   * @private\n   * @deprecated\n   */\n  _TNativeRefType_DONT_USE_IT?: TNativeRefType;\n\n  /**\n   * The type of the native reference.\n   */\n  nativeRefType: string;\n}\n"],"mappings":"","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}