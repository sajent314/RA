{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _ScrollView = _interopRequireDefault(require(\"../../Components/ScrollView/ScrollView\"));\nvar _View = _interopRequireDefault(require(\"../../Components/View/View\"));\nvar _openFileInEditor = _interopRequireDefault(require(\"../../Core/Devtools/openFileInEditor\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../../StyleSheet/StyleSheet\"));\nvar _Text = _interopRequireDefault(require(\"../../Text/Text\"));\nvar _Platform = _interopRequireDefault(require(\"../../Utilities/Platform\"));\nvar LogBoxData = _interopRequireWildcard(require(\"../Data/LogBoxData\"));\nvar _AnsiHighlight = _interopRequireDefault(require(\"./AnsiHighlight\"));\nvar _LogBoxButton = _interopRequireDefault(require(\"./LogBoxButton\"));\nvar _LogBoxInspectorSection = _interopRequireDefault(require(\"./LogBoxInspectorSection\"));\nvar LogBoxStyle = _interopRequireWildcard(require(\"./LogBoxStyle\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\stjones\\\\Desktop\\\\Ra_App\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\UI\\\\LogBoxInspectorCodeFrame.js\";\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction LogBoxInspectorCodeFrame(props) {\n  var codeFrame = props.codeFrame;\n  if (codeFrame == null) {\n    return null;\n  }\n  function getFileName() {\n    var matches = /[^/]*$/.exec(codeFrame.fileName);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n    return codeFrame.fileName;\n  }\n  function getLocation() {\n    var location = codeFrame.location;\n    if (location != null) {\n      return ` (${location.row}:${location.column + 1})`;\n    }\n    return null;\n  }\n  return (0, _jsxRuntime.jsx)(_LogBoxInspectorSection.default, {\n    heading: \"Source\",\n    action: (0, _jsxRuntime.jsx)(AppInfo, {}),\n    children: (0, _jsxRuntime.jsxs)(_View.default, {\n      style: styles.box,\n      children: [(0, _jsxRuntime.jsx)(_View.default, {\n        style: styles.frame,\n        children: (0, _jsxRuntime.jsx)(_ScrollView.default, {\n          horizontal: true,\n          children: (0, _jsxRuntime.jsx)(_AnsiHighlight.default, {\n            style: styles.content,\n            text: codeFrame.content\n          })\n        })\n      }), (0, _jsxRuntime.jsx)(_LogBoxButton.default, {\n        backgroundColor: {\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundDarkColor(1)\n        },\n        style: styles.button,\n        onPress: function onPress() {\n          var _codeFrame$location$r, _codeFrame$location;\n          (0, _openFileInEditor.default)(codeFrame.fileName, (_codeFrame$location$r = (_codeFrame$location = codeFrame.location) == null ? void 0 : _codeFrame$location.row) != null ? _codeFrame$location$r : 0);\n        },\n        children: (0, _jsxRuntime.jsxs)(_Text.default, {\n          style: styles.fileText,\n          children: [getFileName(), getLocation()]\n        })\n      })]\n    })\n  });\n}\nfunction AppInfo() {\n  var appInfo = LogBoxData.getAppInfo();\n  if (appInfo == null) {\n    return null;\n  }\n  return (0, _jsxRuntime.jsx)(_LogBoxButton.default, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: appInfo.onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent'\n    },\n    style: appInfoStyles.buildButton,\n    onPress: appInfo.onPress,\n    children: (0, _jsxRuntime.jsxs)(_Text.default, {\n      style: appInfoStyles.text,\n      children: [appInfo.appVersion, \" (\", appInfo.engine, \")\"]\n    })\n  });\n}\nvar appInfoStyles = _StyleSheet.default.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8\n  }\n});\nvar styles = _StyleSheet.default.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: _Platform.default.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: _Platform.default.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  }\n});\nvar _default = exports.default = LogBoxInspectorCodeFrame;","map":{"version":3,"names":["_ScrollView","_interopRequireDefault","require","_View","_openFileInEditor","_StyleSheet","_Text","_Platform","LogBoxData","_interopRequireWildcard","_AnsiHighlight","_LogBoxButton","_LogBoxInspectorSection","LogBoxStyle","React","_jsxRuntime","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","LogBoxInspectorCodeFrame","props","codeFrame","getFileName","matches","exec","fileName","length","getLocation","location","row","column","jsx","heading","action","AppInfo","children","jsxs","style","styles","box","frame","horizontal","content","text","backgroundColor","pressed","getBackgroundDarkColor","button","onPress","_codeFrame$location$r","_codeFrame$location","openFileInEditor","fileText","appInfo","getAppInfo","getBackgroundColor","appInfoStyles","buildButton","appVersion","engine","StyleSheet","create","color","getTextColor","fontSize","lineHeight","flex","flexGrow","paddingVertical","paddingHorizontal","borderRadius","marginRight","marginLeft","marginTop","padding","borderBottomColor","borderBottomWidth","paddingTop","paddingBottom","includeFontPadding","fontFamily","Platform","select","android","ios","textAlign","_default","exports"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorCodeFrame.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {CodeFrame} from '../Data/parseLogBoxLog';\n\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport View from '../../Components/View/View';\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport Platform from '../../Utilities/Platform';\nimport * as LogBoxData from '../Data/LogBoxData';\nimport AnsiHighlight from './AnsiHighlight';\nimport LogBoxButton from './LogBoxButton';\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\nimport * as LogBoxStyle from './LogBoxStyle';\nimport * as React from 'react';\ntype Props = $ReadOnly<{|\n  codeFrame: ?CodeFrame,\n|}>;\n\nfunction LogBoxInspectorCodeFrame(props: Props): React.Node {\n  const codeFrame = props.codeFrame;\n  if (codeFrame == null) {\n    return null;\n  }\n\n  function getFileName() {\n    // $FlowFixMe[incompatible-use]\n    const matches = /[^/]*$/.exec(codeFrame.fileName);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n\n    // $FlowFixMe[incompatible-use]\n    return codeFrame.fileName;\n  }\n\n  function getLocation() {\n    // $FlowFixMe[incompatible-use]\n    const location = codeFrame.location;\n    if (location != null) {\n      return ` (${location.row}:${\n        location.column + 1 /* Code frame columns are zero indexed */\n      })`;\n    }\n\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection heading=\"Source\" action={<AppInfo />}>\n      <View style={styles.box}>\n        <View style={styles.frame}>\n          <ScrollView horizontal>\n            <AnsiHighlight style={styles.content} text={codeFrame.content} />\n          </ScrollView>\n        </View>\n        <LogBoxButton\n          backgroundColor={{\n            default: 'transparent',\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\n          }}\n          style={styles.button}\n          onPress={() => {\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\n          }}>\n          <Text style={styles.fileText}>\n            {getFileName()}\n            {getLocation()}\n          </Text>\n        </LogBoxButton>\n      </View>\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction AppInfo() {\n  const appInfo = LogBoxData.getAppInfo();\n  if (appInfo == null) {\n    return null;\n  }\n\n  return (\n    <LogBoxButton\n      backgroundColor={{\n        default: 'transparent',\n        pressed: appInfo.onPress\n          ? LogBoxStyle.getBackgroundColor(1)\n          : 'transparent',\n      }}\n      style={appInfoStyles.buildButton}\n      onPress={appInfo.onPress}>\n      <Text style={appInfoStyles.text}>\n        {appInfo.appVersion} ({appInfo.engine})\n      </Text>\n    </LogBoxButton>\n  );\n}\n\nconst appInfoStyles = StyleSheet.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12,\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8,\n  },\n});\n\nconst styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3,\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1,\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\n  },\n});\n\nexport default LogBoxInspectorCodeFrame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}