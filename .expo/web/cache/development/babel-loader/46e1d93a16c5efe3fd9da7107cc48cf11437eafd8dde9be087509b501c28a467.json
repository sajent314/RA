{"ast":null,"code":"if (__DEV__) {\n  const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\n  const messageSocket = new WebSocket(`${protocol}://${window.location.host}/message`);\n  messageSocket.onmessage = message => {\n    const data = JSON.parse(String(message.data));\n    switch (data.method) {\n      case 'sendDevCommand':\n        switch (data.params.name) {\n          case 'reload':\n            window.location.reload();\n            break;\n          case 'rsc-reload':\n            if (data.params.platform && data.params.platform !== \"web\") {\n              return;\n            }\n            globalThis.__EXPO_RSC_RELOAD_LISTENERS__?.forEach(l => l());\n            break;\n          case 'module-import':\n            {\n              const {\n                data: moduleData\n              } = data.params;\n              const id = `expo-module-id=\"${moduleData.id}\"`;\n              const style = document.querySelector(`style[${id}]`);\n              document.querySelector(`script[${id}]`)?.remove();\n              const code = moduleData.code;\n              const script = document.createElement('script');\n              script.type = 'module';\n              script.text = code;\n              script.setAttribute('expo-module-id', moduleData.id);\n              document.head.appendChild(script);\n              if (style) {\n                queueMicrotask(() => style.parentElement?.removeChild(style));\n              }\n            }\n            break;\n        }\n        break;\n      case 'reload':\n        window.location.reload();\n        break;\n      case 'devMenu':\n        break;\n    }\n  };\n}","map":{"version":3,"names":["__DEV__","protocol","window","location","messageSocket","WebSocket","host","onmessage","message","data","JSON","parse","String","method","params","name","reload","platform","globalThis","__EXPO_RSC_RELOAD_LISTENERS__","forEach","l","moduleData","id","style","document","querySelector","remove","code","script","createElement","type","text","setAttribute","head","appendChild","queueMicrotask","parentElement","removeChild"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/expo/src/async-require/messageSocket.ts"],"sourcesContent":["/* eslint-env browser */\n\n// Setup websocket messages for reloading the page from the command line.\n// This is normally setup on the native client.\n\ndeclare namespace globalThis {\n  const __EXPO_RSC_RELOAD_LISTENERS__: (() => unknown)[] | undefined;\n}\n\nif (__DEV__) {\n  const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\n  const messageSocket = new WebSocket(`${protocol}://${window.location.host}/message`);\n  messageSocket.onmessage = (message) => {\n    const data = JSON.parse(String(message.data));\n    switch (data.method) {\n      case 'sendDevCommand':\n        switch (data.params.name) {\n          case 'reload':\n            window.location.reload();\n            break;\n          case 'rsc-reload':\n            if (data.params.platform && data.params.platform !== process.env.EXPO_OS) {\n              return;\n            }\n            globalThis.__EXPO_RSC_RELOAD_LISTENERS__?.forEach((l) => l());\n            break;\n          // Inject CSS modules from server components into the root client bundle in development.\n          case 'module-import':\n            {\n              const { data: moduleData } = data.params;\n              // remove element with the same 'expo-module-id'\n              const id = `expo-module-id=\"${moduleData.id}\"`;\n              const style = document.querySelector(`style[${id}]`);\n              document.querySelector(`script[${id}]`)?.remove();\n              const code = moduleData.code;\n              const script = document.createElement('script');\n              script.type = 'module';\n              script.text = code;\n              script.setAttribute('expo-module-id', moduleData.id);\n              document.head.appendChild(script);\n              if (style) {\n                // remove the previous block after the new one is loaded to mitigate FOUC.\n                queueMicrotask(() => style.parentElement?.removeChild(style));\n              }\n            }\n            break;\n        }\n        break;\n      case 'reload':\n        window.location.reload();\n        break;\n      case 'devMenu':\n        // no-op\n        break;\n    }\n  };\n}\n"],"mappings":"AASA,IAAIA,OAAO,EAAE;EACX,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EACrE,MAAMG,aAAa,GAAG,IAAIC,SAAS,CAAC,GAAGJ,QAAQ,MAAMC,MAAM,CAACC,QAAQ,CAACG,IAAI,UAAU,CAAC;EACpFF,aAAa,CAACG,SAAS,GAAIC,OAAO,IAAK;IACrC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACJ,OAAO,CAACC,IAAI,CAAC,CAAC;IAC7C,QAAQA,IAAI,CAACI,MAAM;MACjB,KAAK,gBAAgB;QACnB,QAAQJ,IAAI,CAACK,MAAM,CAACC,IAAI;UACtB,KAAK,QAAQ;YACXb,MAAM,CAACC,QAAQ,CAACa,MAAM,CAAC,CAAC;YACxB;UACF,KAAK,YAAY;YACf,IAAIP,IAAI,CAACK,MAAM,CAACG,QAAQ,IAAIR,IAAI,CAACK,MAAM,CAACG,QAAQ,UAAwB,EAAE;cACxE;YACF;YACAC,UAAU,CAACC,6BAA6B,EAAEC,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAAC,CAAC,CAAC;YAC7D;UAEF,KAAK,eAAe;YAClB;cACE,MAAM;gBAAEZ,IAAI,EAAEa;cAAW,CAAC,GAAGb,IAAI,CAACK,MAAM;cAExC,MAAMS,EAAE,GAAG,mBAAmBD,UAAU,CAACC,EAAE,GAAG;cAC9C,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAASH,EAAE,GAAG,CAAC;cACpDE,QAAQ,CAACC,aAAa,CAAC,UAAUH,EAAE,GAAG,CAAC,EAAEI,MAAM,CAAC,CAAC;cACjD,MAAMC,IAAI,GAAGN,UAAU,CAACM,IAAI;cAC5B,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,aAAa,CAAC,QAAQ,CAAC;cAC/CD,MAAM,CAACE,IAAI,GAAG,QAAQ;cACtBF,MAAM,CAACG,IAAI,GAAGJ,IAAI;cAClBC,MAAM,CAACI,YAAY,CAAC,gBAAgB,EAAEX,UAAU,CAACC,EAAE,CAAC;cACpDE,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;cACjC,IAAIL,KAAK,EAAE;gBAETY,cAAc,CAAC,MAAMZ,KAAK,CAACa,aAAa,EAAEC,WAAW,CAACd,KAAK,CAAC,CAAC;cAC/D;YACF;YACA;QACJ;QACA;MACF,KAAK,QAAQ;QACXtB,MAAM,CAACC,QAAQ,CAACa,MAAM,CAAC,CAAC;QACxB;MACF,KAAK,SAAS;QAEZ;IACJ;EACF,CAAC;AACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"script","externalDependencies":[]}