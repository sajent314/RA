{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _reactNative = require(\"react-native\");\nvar _Batchinator = _interopRequireDefault(require(\"../Interaction/Batchinator\"));\nvar _clamp = _interopRequireDefault(require(\"../Utilities/clamp\"));\nvar _infoLog = _interopRequireDefault(require(\"../Utilities/infoLog\"));\nvar _CellRenderMask = require(\"./CellRenderMask\");\nvar _ChildListCollection = _interopRequireDefault(require(\"./ChildListCollection\"));\nvar _FillRateHelper = _interopRequireDefault(require(\"./FillRateHelper\"));\nvar _StateSafePureComponent = _interopRequireDefault(require(\"./StateSafePureComponent\"));\nvar _ViewabilityHelper = _interopRequireDefault(require(\"./ViewabilityHelper\"));\nvar _VirtualizedListCellRenderer = _interopRequireDefault(require(\"./VirtualizedListCellRenderer\"));\nvar _VirtualizedListContext = require(\"./VirtualizedListContext.js\");\nvar _VirtualizeUtils = require(\"./VirtualizeUtils\");\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\stjones\\\\Desktop\\\\Ra_App\\\\node_modules\\\\@react-native\\\\virtualized-lists\\\\Lists\\\\VirtualizedList.js\";\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\nfunction horizontalOrDefault(horizontal) {\n  return horizontal != null ? horizontal : false;\n}\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender != null ? initialNumToRender : 10;\n}\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch != null ? maxToRenderPerBatch : 10;\n}\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold != null ? onStartReachedThreshold : 2;\n}\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold != null ? onEndReachedThreshold : 2;\n}\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle != null ? scrollEventThrottle : 50;\n}\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize != null ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\nvar VirtualizedList = function (_StateSafePureCompone) {\n  function VirtualizedList(_props) {\n    var _this$props$updateCel, _this$props$maintainV, _this$props$maintainV2;\n    var _this;\n    (0, _classCallCheck2.default)(this, VirtualizedList);\n    _this = _callSuper(this, VirtualizedList, [_props]);\n    _this._getScrollMetrics = function () {\n      return _this._scrollMetrics;\n    };\n    _this._getOutermostParentListRef = function () {\n      if (_this._isNestedWithSameOrientation()) {\n        return _this.context.getOutermostParentListRef();\n      } else {\n        return _this;\n      }\n    };\n    _this._registerAsNestedChild = function (childList) {\n      _this._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (_this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    _this._unregisterAsNestedChild = function (childList) {\n      _this._nestedChildLists.remove(childList.ref);\n    };\n    _this._onUpdateSeparators = function (keys, newProps) {\n      keys.forEach(function (key) {\n        var ref = key != null && _this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    _this._getSpacerKey = function (isVertical) {\n      return isVertical ? 'height' : 'width';\n    };\n    _this._averageCellLength = 0;\n    _this._cellRefs = {};\n    _this._frames = {};\n    _this._footerLength = 0;\n    _this._hasTriggeredInitialScrollToIndex = false;\n    _this._hasInteracted = false;\n    _this._hasMore = false;\n    _this._hasWarned = {};\n    _this._headerLength = 0;\n    _this._hiPriInProgress = false;\n    _this._highestMeasuredFrameIndex = 0;\n    _this._indicesToKeys = new Map();\n    _this._lastFocusedCellKey = null;\n    _this._nestedChildLists = new _ChildListCollection.default();\n    _this._offsetFromParentVirtualizedList = 0;\n    _this._prevParentOffset = 0;\n    _this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    _this._scrollRef = null;\n    _this._sentStartForContentLength = 0;\n    _this._sentEndForContentLength = 0;\n    _this._totalCellLength = 0;\n    _this._totalCellsMeasured = 0;\n    _this._viewabilityTuples = [];\n    _this._captureScrollRef = function (ref) {\n      _this._scrollRef = ref;\n    };\n    _this._defaultRenderScrollComponent = function (props) {\n      var onRefresh = props.onRefresh;\n      if (_this._isNestedWithSameOrientation()) {\n        return (0, _jsxRuntime.jsx)(_reactNative.View, Object.assign({}, props));\n      } else if (onRefresh) {\n        var _props$refreshing;\n        (0, _invariant.default)(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) != null ? _props$refreshing : 'undefined') + '`');\n        return ((0, _jsxRuntime.jsx)(_reactNative.ScrollView, Object.assign({}, props, {\n            refreshControl: props.refreshControl == null ? (0, _jsxRuntime.jsx)(_reactNative.RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        return (0, _jsxRuntime.jsx)(_reactNative.ScrollView, Object.assign({}, props));\n      }\n    };\n    _this._onCellLayout = function (e, cellKey, index) {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: _this._selectOffset(layout),\n        length: _this._selectLength(layout),\n        index: index,\n        inLayout: true\n      };\n      var curr = _this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        _this._totalCellLength += next.length - (curr ? curr.length : 0);\n        _this._totalCellsMeasured += curr ? 0 : 1;\n        _this._averageCellLength = _this._totalCellLength / _this._totalCellsMeasured;\n        _this._frames[cellKey] = next;\n        _this._highestMeasuredFrameIndex = Math.max(_this._highestMeasuredFrameIndex, index);\n        _this._scheduleCellsToRenderUpdate();\n      } else {\n        _this._frames[cellKey].inLayout = true;\n      }\n      _this._triggerRemeasureForChildListsInCell(cellKey);\n      _this._computeBlankness();\n      _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);\n    };\n    _this._onCellUnmount = function (cellKey) {\n      delete _this._cellRefs[cellKey];\n      var curr = _this._frames[cellKey];\n      if (curr) {\n        _this._frames[cellKey] = Object.assign({}, curr, {\n          inLayout: false\n        });\n      }\n    };\n    _this._onLayout = function (e) {\n      if (_this._isNestedWithSameOrientation()) {\n        _this.measureLayoutRelativeToContainingList();\n      } else {\n        _this._scrollMetrics.visibleLength = _this._selectLength(e.nativeEvent.layout);\n      }\n      _this.props.onLayout && _this.props.onLayout(e);\n      _this._scheduleCellsToRenderUpdate();\n      _this._maybeCallOnEdgeReached();\n    };\n    _this._onLayoutEmpty = function (e) {\n      _this.props.onLayout && _this.props.onLayout(e);\n    };\n    _this._onLayoutFooter = function (e) {\n      _this._triggerRemeasureForChildListsInCell(_this._getFooterCellKey());\n      _this._footerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n    _this._onLayoutHeader = function (e) {\n      _this._headerLength = _this._selectLength(e.nativeEvent.layout);\n    };\n    _this._onContentSizeChange = function (width, height) {\n      if (width > 0 && height > 0 && _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 && !_this._hasTriggeredInitialScrollToIndex) {\n        if (_this.props.contentOffset == null) {\n          if (_this.props.initialScrollIndex < _this.props.getItemCount(_this.props.data)) {\n            _this.scrollToIndex({\n              animated: false,\n              index: (0, _nullthrows.default)(_this.props.initialScrollIndex)\n            });\n          } else {\n            _this.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        _this._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (_this.props.onContentSizeChange) {\n        _this.props.onContentSizeChange(width, height);\n      }\n      _this._scrollMetrics.contentLength = _this._selectLength({\n        height: height,\n        width: width\n      });\n      _this._scheduleCellsToRenderUpdate();\n      _this._maybeCallOnEdgeReached();\n    };\n    _this._convertParentScrollMetrics = function (metrics) {\n      var offset = metrics.offset - _this._offsetFromParentVirtualizedList;\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - _this._scrollMetrics.offset;\n      var contentLength = _this._scrollMetrics.contentLength;\n      return {\n        visibleLength: visibleLength,\n        contentLength: contentLength,\n        offset: offset,\n        dOffset: dOffset\n      };\n    };\n    _this._onScroll = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScroll(e);\n      });\n      if (_this.props.onScroll) {\n        _this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = _this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = _this._selectLength(e.nativeEvent.contentSize);\n      var offset = _this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - _this._scrollMetrics.offset;\n      if (_this._isNestedWithSameOrientation()) {\n        if (_this._scrollMetrics.contentLength === 0) {\n          return;\n        }\n        var _this$_convertParentS = _this._convertParentScrollMetrics({\n          visibleLength: visibleLength,\n          offset: offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = _this._scrollMetrics.timestamp ? Math.max(1, timestamp - _this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && _this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !_this._hasWarned.perf) {\n        (0, _infoLog.default)('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt: dt,\n          prevDt: _this._scrollMetrics.dt,\n          contentLength: contentLength\n        });\n        _this._hasWarned.perf = true;\n      }\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      _this._scrollMetrics = {\n        contentLength: contentLength,\n        dt: dt,\n        dOffset: dOffset,\n        offset: offset,\n        timestamp: timestamp,\n        velocity: velocity,\n        visibleLength: visibleLength,\n        zoomScale: zoomScale\n      };\n      if (_this.state.pendingScrollUpdateCount > 0) {\n        _this.setState(function (state) {\n          return {\n            pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1\n          };\n        });\n      }\n      _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);\n      if (!_this.props) {\n        return;\n      }\n      _this._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        _this._fillRateHelper.activate();\n      }\n      _this._computeBlankness();\n      _this._scheduleCellsToRenderUpdate();\n    };\n    _this._onScrollBeginDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScrollBeginDrag(e);\n      });\n      _this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      _this._hasInteracted = true;\n      _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n    };\n    _this._onScrollEndDrag = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        _this._scrollMetrics.velocity = _this._selectOffset(velocity);\n      }\n      _this._computeBlankness();\n      _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n    };\n    _this._onMomentumScrollBegin = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollBegin(e);\n      });\n      _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n    };\n    _this._onMomentumScrollEnd = function (e) {\n      _this._nestedChildLists.forEach(function (childList) {\n        childList._onMomentumScrollEnd(e);\n      });\n      _this._scrollMetrics.velocity = 0;\n      _this._computeBlankness();\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n    };\n    _this._updateCellsToRender = function () {\n      _this._updateViewableItems(_this.props, _this.state.cellsAroundViewport);\n      _this.setState(function (state, props) {\n        var cellsAroundViewport = _this._adjustCellsAroundViewport(props, state.cellsAroundViewport, state.pendingScrollUpdateCount);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, _this._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport: cellsAroundViewport,\n          renderMask: renderMask\n        };\n      });\n    };\n    _this._createViewToken = function (index, isViewable, props) {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index: index,\n        item: item,\n        key: VirtualizedList._keyExtractor(item, index, props),\n        isViewable: isViewable\n      };\n    };\n    _this._getOffsetApprox = function (index, props) {\n      if (Number.isInteger(index)) {\n        return _this.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = _this.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    _this.__getFrameMetricsApprox = function (index, props) {\n      var frame = _this._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        (0, _invariant.default)(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: _this._averageCellLength,\n          offset: _this._averageCellLength * index\n        };\n      }\n    };\n    _this._getFrameMetrics = function (index, props) {\n      var data = props.data,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var frame = _this._frames[VirtualizedList._getItemKey(props, index)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    _this._getNonViewportRenderRegions = function (props) {\n      if (!(_this._lastFocusedCellKey && _this._cellRefs[_this._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = _this._cellRefs[_this._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n      if (focusedCellIndex >= itemCount || VirtualizedList._getItemKey(props, focusedCellIndex) !== _this._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < _this._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += _this.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < _this._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += _this.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first: first,\n        last: last\n      }];\n    };\n    _this._checkProps(_props);\n    _this._fillRateHelper = new _FillRateHelper.default(_this._getFrameMetrics);\n    _this._updateCellsToRenderBatcher = new _Batchinator.default(_this._updateCellsToRender, (_this$props$updateCel = _this.props.updateCellsBatchingPeriod) != null ? _this$props$updateCel : 50);\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._viewabilityTuples = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityHelper: new _ViewabilityHelper.default(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged\n        };\n      });\n    } else {\n      var _this$props = _this.props,\n        onViewableItemsChanged = _this$props.onViewableItemsChanged,\n        viewabilityConfig = _this$props.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        _this._viewabilityTuples.push({\n          viewabilityHelper: new _ViewabilityHelper.default(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    var minIndexForVisible = (_this$props$maintainV = (_this$props$maintainV2 = _this.props.maintainVisibleContentPosition) == null ? void 0 : _this$props$maintainV2.minIndexForVisible) != null ? _this$props$maintainV : 0;\n    _this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion),\n      firstVisibleItemKey: _this.props.getItemCount(_this.props.data) > minIndexForVisible ? VirtualizedList._getItemKey(_this.props, minIndexForVisible) : null,\n      pendingScrollUpdateCount: _this.props.initialScrollIndex != null && _this.props.initialScrollIndex > 0 ? 1 : 0\n    };\n    return _this;\n  }\n  (0, _inherits2.default)(VirtualizedList, _StateSafePureCompone);\n  return (0, _createClass2.default)(VirtualizedList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      var animated = params ? params.animated : true;\n      var veryLast = this.props.getItemCount(this.props.data) - 1;\n      if (veryLast < 0) {\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n      var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      var _this$props2 = this.props,\n        data = _this$props2.data,\n        horizontal = _this$props2.horizontal,\n        getItemCount = _this$props2.getItemCount,\n        getItemLayout = _this$props2.getItemLayout,\n        onScrollToIndexFailed = _this$props2.onScrollToIndexFailed;\n      var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n      (0, _invariant.default)(index >= 0, `scrollToIndex out of range: requested index ${index} but minimum is 0`);\n      (0, _invariant.default)(getItemCount(data) >= 1, `scrollToIndex out of range: item length ${getItemCount(data)} but minimum is 1`);\n      (0, _invariant.default)(index < getItemCount(data), `scrollToIndex out of range: requested index ${index} is out of 0 to ${getItemCount(data) - 1}`);\n      if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n        (0, _invariant.default)(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n        onScrollToIndexFailed({\n          averageItemLength: this._averageCellLength,\n          highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n          index: index\n        });\n        return;\n      }\n      var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n      var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontal ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      var item = params.item;\n      var _this$props3 = this.props,\n        data = _this$props3.data,\n        getItem = _this$props3.getItem,\n        getItemCount = _this$props3.getItemCount;\n      var itemCount = getItemCount(data);\n      for (var _index = 0; _index < itemCount; _index++) {\n        if (getItem(data, _index) === item) {\n          this.scrollToIndex(Object.assign({}, params, {\n            index: _index\n          }));\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      var animated = params.animated,\n        offset = params.offset;\n      if (this._scrollRef == null) {\n        return;\n      }\n      if (this._scrollRef.scrollTo == null) {\n        console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n        return;\n      }\n      this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n        x: offset,\n        animated: animated\n      } : {\n        y: offset,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      this._nestedChildLists.forEach(function (childList) {\n        childList.recordInteraction();\n      });\n      this._viewabilityTuples.forEach(function (t) {\n        t.viewabilityHelper.recordInteraction();\n      });\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._scrollRef == null) {\n        return;\n      }\n      this._scrollRef.flashScrollIndicators();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._scrollRef && this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._scrollRef && this._scrollRef.getScrollableNode) {\n        return this._scrollRef.getScrollableNode();\n      } else {\n        return (0, _reactNative.findNodeHandle)(this._scrollRef);\n      }\n    }\n  }, {\n    key: \"getScrollRef\",\n    value: function getScrollRef() {\n      if (this._scrollRef && this._scrollRef.getScrollRef) {\n        return this._scrollRef.getScrollRef();\n      } else {\n        return this._scrollRef;\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      if (this._scrollRef) {\n        this._scrollRef.setNativeProps(props);\n      }\n    }\n  }, {\n    key: \"_getCellKey\",\n    value: function _getCellKey() {\n      var _this$context;\n      return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n    }\n  }, {\n    key: \"hasMore\",\n    value: function hasMore() {\n      return this._hasMore;\n    }\n  }, {\n    key: \"_checkProps\",\n    value: function _checkProps(props) {\n      var onScroll = props.onScroll,\n        windowSize = props.windowSize,\n        getItemCount = props.getItemCount,\n        data = props.data,\n        initialScrollIndex = props.initialScrollIndex;\n      (0, _invariant.default)(!onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n      (0, _invariant.default)(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n      (0, _invariant.default)(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n      var itemCount = getItemCount(data);\n      if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n        console.warn(`initialScrollIndex \"${initialScrollIndex}\" is not valid (list has ${itemCount} items)`);\n        this._hasWarned.initialScrollIndex = true;\n      }\n      if (__DEV__ && !this._hasWarned.flexWrap) {\n        var flatStyles = _reactNative.StyleSheet.flatten(this.props.contentContainerStyle);\n        if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n          console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n          this._hasWarned.flexWrap = true;\n        }\n      }\n    }\n  }, {\n    key: \"_adjustCellsAroundViewport\",\n    value: function _adjustCellsAroundViewport(props, cellsAroundViewport, pendingScrollUpdateCount) {\n      var data = props.data,\n        getItemCount = props.getItemCount;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n      var _this$_scrollMetrics = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics.contentLength,\n        offset = _this$_scrollMetrics.offset,\n        visibleLength = _this$_scrollMetrics.visibleLength;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (visibleLength <= 0 || contentLength <= 0) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      var newCellsAroundViewport;\n      if (props.disableVirtualization) {\n        var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n        newCellsAroundViewport = {\n          first: 0,\n          last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n        };\n      } else {\n        if (pendingScrollUpdateCount > 0) {\n          return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n        }\n        newCellsAroundViewport = (0, _VirtualizeUtils.computeWindowedRenderLimits)(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n        (0, _invariant.default)(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n      }\n      if (this._nestedChildLists.size() > 0) {\n        var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n        newCellsAroundViewport.last = childIdx != null ? childIdx : newCellsAroundViewport.last;\n      }\n      return newCellsAroundViewport;\n    }\n  }, {\n    key: \"_findFirstChildWithMore\",\n    value: function _findFirstChildWithMore(first, last) {\n      for (var ii = first; ii <= last; ii++) {\n        var cellKeyForIndex = this._indicesToKeys.get(ii);\n        if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, function (childList) {\n          return childList.hasMore();\n        })) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.registerAsNestedChild({\n          ref: this,\n          cellKey: this.context.cellKey\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._isNestedWithSameOrientation()) {\n        this.context.unregisterAsNestedChild({\n          ref: this\n        });\n      }\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.dispose();\n      });\n      this._fillRateHelper.deactivateAndFlush();\n    }\n  }, {\n    key: \"_pushCells\",\n    value: function _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n      var _this2 = this;\n      var _this$props4 = this.props,\n        CellRendererComponent = _this$props4.CellRendererComponent,\n        ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n        ListHeaderComponent = _this$props4.ListHeaderComponent,\n        ListItemComponent = _this$props4.ListItemComponent,\n        data = _this$props4.data,\n        debug = _this$props4.debug,\n        getItem = _this$props4.getItem,\n        getItemCount = _this$props4.getItemCount,\n        getItemLayout = _this$props4.getItemLayout,\n        horizontal = _this$props4.horizontal,\n        renderItem = _this$props4.renderItem;\n      var stickyOffset = ListHeaderComponent ? 1 : 0;\n      var end = getItemCount(data) - 1;\n      var prevCellKey;\n      last = Math.min(end, last);\n      var _loop = function _loop() {\n        var item = getItem(data, ii);\n        var key = VirtualizedList._keyExtractor(item, ii, _this2.props);\n        _this2._indicesToKeys.set(ii, key);\n        if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n          stickyHeaderIndices.push(cells.length);\n        }\n        var shouldListenForLayout = getItemLayout == null || debug || _this2._fillRateHelper.enabled();\n        cells.push((0, _jsxRuntime.jsx)(_VirtualizedListCellRenderer.default, Object.assign({\n          CellRendererComponent: CellRendererComponent,\n          ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n          ListItemComponent: ListItemComponent,\n          cellKey: key,\n          horizontal: horizontal,\n          index: ii,\n          inversionStyle: inversionStyle,\n          item: item,\n          prevCellKey: prevCellKey,\n          onUpdateSeparators: _this2._onUpdateSeparators,\n          onCellFocusCapture: function onCellFocusCapture(e) {\n            return _this2._onCellFocusCapture(key);\n          },\n          onUnmount: _this2._onCellUnmount,\n          ref: function ref(_ref) {\n            _this2._cellRefs[key] = _ref;\n          },\n          renderItem: renderItem\n        }, shouldListenForLayout && {\n          onCellLayout: _this2._onCellLayout\n        }), key));\n        prevCellKey = key;\n      };\n      for (var ii = first; ii <= last; ii++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"_isNestedWithSameOrientation\",\n    value: function _isNestedWithSameOrientation() {\n      var nestedContext = this.context;\n      return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      this._checkProps(this.props);\n      var _this$props5 = this.props,\n        ListEmptyComponent = _this$props5.ListEmptyComponent,\n        ListFooterComponent = _this$props5.ListFooterComponent,\n        ListHeaderComponent = _this$props5.ListHeaderComponent;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        horizontal = _this$props6.horizontal;\n      var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n      var cells = [];\n      var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n      var stickyHeaderIndices = [];\n      if (ListHeaderComponent) {\n        if (stickyIndicesFromProps.has(0)) {\n          stickyHeaderIndices.push(0);\n        }\n        var _element = React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : (0, _jsxRuntime.jsx)(ListHeaderComponent, {});\n        cells.push((0, _jsxRuntime.jsx)(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-header',\n          children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n            collapsable: false,\n            onLayout: this._onLayoutHeader,\n            style: _reactNative.StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle),\n            children: _element\n          })\n        }, \"$header\"));\n      }\n      var itemCount = this.props.getItemCount(data);\n      if (itemCount === 0 && ListEmptyComponent) {\n        var _element2 = React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : (0, _jsxRuntime.jsx)(ListEmptyComponent, {});\n        cells.push((0, _jsxRuntime.jsx)(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getCellKey() + '-empty',\n          children: React.cloneElement(_element2, {\n            onLayout: function onLayout(event) {\n              _this3._onLayoutEmpty(event);\n              if (_element2.props.onLayout) {\n                _element2.props.onLayout(event);\n              }\n            },\n            style: _reactNative.StyleSheet.compose(inversionStyle, _element2.props.style)\n          })\n        }, \"$empty\"));\n      }\n      if (itemCount > 0) {\n        _usedIndexForKey = false;\n        _keylessItemComponentName = '';\n        var spacerKey = this._getSpacerKey(!horizontal);\n        var renderRegions = this.state.renderMask.enumerateRegions();\n        var lastSpacer = findLastWhere(renderRegions, function (r) {\n          return r.isSpacer;\n        });\n        for (var section of renderRegions) {\n          if (section.isSpacer) {\n            if (this.props.disableVirtualization) {\n              continue;\n            }\n            var isLastSpacer = section === lastSpacer;\n            var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n            var last = constrainToMeasured ? (0, _clamp.default)(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n            var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n            var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n            var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n            cells.push((0, _jsxRuntime.jsx)(_reactNative.View, {\n              style: (0, _defineProperty2.default)({}, spacerKey, spacerSize)\n            }, `$spacer-${section.first}`));\n          } else {\n            this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n          }\n        }\n        if (!this._hasWarned.keys && _usedIndexForKey) {\n          console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n          this._hasWarned.keys = true;\n        }\n      }\n      if (ListFooterComponent) {\n        var _element3 = React.isValidElement(ListFooterComponent) ? ListFooterComponent : (0, _jsxRuntime.jsx)(ListFooterComponent, {});\n        cells.push((0, _jsxRuntime.jsx)(_VirtualizedListContext.VirtualizedListCellContextProvider, {\n          cellKey: this._getFooterCellKey(),\n          children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n            onLayout: this._onLayoutFooter,\n            style: _reactNative.StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle),\n            children: _element3\n          })\n        }, \"$footer\"));\n      }\n      var scrollProps = Object.assign({}, this.props, {\n        onContentSizeChange: this._onContentSizeChange,\n        onLayout: this._onLayout,\n        onScroll: this._onScroll,\n        onScrollBeginDrag: this._onScrollBeginDrag,\n        onScrollEndDrag: this._onScrollEndDrag,\n        onMomentumScrollBegin: this._onMomentumScrollBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n        invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n        stickyHeaderIndices: stickyHeaderIndices,\n        style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style,\n        isInvertedVirtualizedList: this.props.inverted,\n        maintainVisibleContentPosition: this.props.maintainVisibleContentPosition != null ? Object.assign({}, this.props.maintainVisibleContentPosition, {\n          minIndexForVisible: this.props.maintainVisibleContentPosition.minIndexForVisible + (this.props.ListHeaderComponent ? 1 : 0)\n        }) : undefined\n      });\n      this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n      var innerRet = (0, _jsxRuntime.jsx)(_VirtualizedListContext.VirtualizedListContextProvider, {\n        value: {\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild\n        },\n        children: React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n          ref: this._captureScrollRef\n        }, cells)\n      });\n      var ret = innerRet;\n      if (__DEV__) {\n        ret = (0, _jsxRuntime.jsx)(_reactNative.ScrollView.Context.Consumer, {\n          children: function children(scrollContext) {\n            if (scrollContext != null && !scrollContext.horizontal === !horizontalOrDefault(_this3.props.horizontal) && !_this3._hasWarned.nesting && _this3.context == null && _this3.props.scrollEnabled !== false) {\n              console.error('VirtualizedLists should never be nested inside plain ScrollViews with the same ' + 'orientation because it can break windowing and other functionality - use another ' + 'VirtualizedList-backed container instead.');\n              _this3._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }\n        });\n      }\n      if (this.props.debug) {\n        return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: styles.debug,\n          children: [ret, this._renderDebugOverlay()]\n        });\n      } else {\n        return ret;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props7 = this.props,\n        data = _this$props7.data,\n        extraData = _this$props7.extraData;\n      if (data !== prevProps.data || extraData !== prevProps.extraData) {\n        this._viewabilityTuples.forEach(function (tuple) {\n          tuple.viewabilityHelper.resetViewableIndices();\n        });\n      }\n      var hiPriInProgress = this._hiPriInProgress;\n      this._scheduleCellsToRenderUpdate();\n      if (hiPriInProgress) {\n        this._hiPriInProgress = false;\n      }\n    }\n  }, {\n    key: \"_computeBlankness\",\n    value: function _computeBlankness() {\n      this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n    }\n  }, {\n    key: \"_onCellFocusCapture\",\n    value: function _onCellFocusCapture(cellKey) {\n      this._lastFocusedCellKey = cellKey;\n      this._updateCellsToRender();\n    }\n  }, {\n    key: \"_triggerRemeasureForChildListsInCell\",\n    value: function _triggerRemeasureForChildListsInCell(cellKey) {\n      this._nestedChildLists.forEachInCell(cellKey, function (childList) {\n        childList.measureLayoutRelativeToContainingList();\n      });\n    }\n  }, {\n    key: \"measureLayoutRelativeToContainingList\",\n    value: function measureLayoutRelativeToContainingList() {\n      var _this4 = this;\n      try {\n        if (!this._scrollRef) {\n          return;\n        }\n        this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), function (x, y, width, height) {\n          _this4._offsetFromParentVirtualizedList = _this4._selectOffset({\n            x: x,\n            y: y\n          });\n          _this4._scrollMetrics.contentLength = _this4._selectLength({\n            width: width,\n            height: height\n          });\n          var scrollMetrics = _this4._convertParentScrollMetrics(_this4.context.getScrollMetrics());\n          var metricsChanged = _this4._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || _this4._scrollMetrics.offset !== scrollMetrics.offset;\n          if (metricsChanged) {\n            _this4._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            _this4._scrollMetrics.offset = scrollMetrics.offset;\n            _this4._nestedChildLists.forEach(function (childList) {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        }, function (error) {\n          console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n        });\n      } catch (error) {\n        console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n      }\n    }\n  }, {\n    key: \"_getFooterCellKey\",\n    value: function _getFooterCellKey() {\n      return this._getCellKey() + '-footer';\n    }\n  }, {\n    key: \"_renderDebugOverlay\",\n    value: function _renderDebugOverlay() {\n      var _this5 = this;\n      var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n      var framesInLayout = [];\n      var itemCount = this.props.getItemCount(this.props.data);\n      for (var ii = 0; ii < itemCount; ii++) {\n        var frame = this.__getFrameMetricsApprox(ii, this.props);\n        if (frame.inLayout) {\n          framesInLayout.push(frame);\n        }\n      }\n      var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n      var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n      var windowLen = frameLast.offset + frameLast.length - windowTop;\n      var visTop = this._scrollMetrics.offset;\n      var visLen = this._scrollMetrics.visibleLength;\n      return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: [styles.debugOverlayBase, styles.debugOverlay],\n        children: [framesInLayout.map(function (f, ii) {\n          return (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n              top: f.offset * normalize,\n              height: f.length * normalize\n            }]\n          }, 'f' + ii);\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n            top: windowTop * normalize,\n            height: windowLen * normalize\n          }]\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n            top: visTop * normalize,\n            height: visLen * normalize\n          }]\n        })]\n      });\n    }\n  }, {\n    key: \"_selectLength\",\n    value: function _selectLength(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n    }\n  }, {\n    key: \"_selectOffset\",\n    value: function _selectOffset(metrics) {\n      return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n    }\n  }, {\n    key: \"_maybeCallOnEdgeReached\",\n    value: function _maybeCallOnEdgeReached() {\n      var _this$props8 = this.props,\n        data = _this$props8.data,\n        getItemCount = _this$props8.getItemCount,\n        onStartReached = _this$props8.onStartReached,\n        onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n        onEndReached = _this$props8.onEndReached,\n        onEndReachedThreshold = _this$props8.onEndReachedThreshold;\n      if (this.state.pendingScrollUpdateCount > 0) {\n        return;\n      }\n      var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n      var distanceFromStart = offset;\n      var distanceFromEnd = contentLength - visibleLength - offset;\n      if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n        distanceFromStart = 0;\n      }\n      if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n        distanceFromEnd = 0;\n      }\n      var DEFAULT_THRESHOLD_PX = 2;\n      var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n      var isWithinStartThreshold = distanceFromStart <= startThreshold;\n      var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n      if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n        this._sentEndForContentLength = this._scrollMetrics.contentLength;\n        onEndReached({\n          distanceFromEnd: distanceFromEnd\n        });\n      } else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n        this._sentStartForContentLength = this._scrollMetrics.contentLength;\n        onStartReached({\n          distanceFromStart: distanceFromStart\n        });\n      } else {\n        this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n        this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n      }\n    }\n  }, {\n    key: \"_scheduleCellsToRenderUpdate\",\n    value: function _scheduleCellsToRenderUpdate() {\n      var _this$state$cellsArou = this.state.cellsAroundViewport,\n        first = _this$state$cellsArou.first,\n        last = _this$state$cellsArou.last;\n      var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n      var itemCount = this.props.getItemCount(this.props.data);\n      var hiPri = false;\n      var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n      if (first > 0) {\n        var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n        hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n      }\n      if (!hiPri && last >= 0 && last < itemCount - 1) {\n        var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n        hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n      }\n      if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n        this._hiPriInProgress = true;\n        this._updateCellsToRenderBatcher.dispose({\n          abort: true\n        });\n        this._updateCellsToRender();\n        return;\n      } else {\n        this._updateCellsToRenderBatcher.schedule();\n      }\n    }\n  }, {\n    key: \"_updateViewableItems\",\n    value: function _updateViewableItems(props, cellsAroundViewport) {\n      var _this6 = this;\n      if (this.state.pendingScrollUpdateCount > 0) {\n        return;\n      }\n      this._viewabilityTuples.forEach(function (tuple) {\n        tuple.viewabilityHelper.onUpdate(props, _this6._scrollMetrics.offset, _this6._scrollMetrics.visibleLength, _this6._getFrameMetrics, _this6._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n      });\n    }\n  }], [{\n    key: \"_findItemIndexWithKey\",\n    value: function _findItemIndexWithKey(props, key, hint) {\n      var itemCount = props.getItemCount(props.data);\n      if (hint != null && hint >= 0 && hint < itemCount) {\n        var curKey = VirtualizedList._getItemKey(props, hint);\n        if (curKey === key) {\n          return hint;\n        }\n      }\n      for (var ii = 0; ii < itemCount; ii++) {\n        var _curKey = VirtualizedList._getItemKey(props, ii);\n        if (_curKey === key) {\n          return ii;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"_getItemKey\",\n    value: function _getItemKey(props, index) {\n      var item = props.getItem(props.data, index);\n      return VirtualizedList._keyExtractor(item, index, props);\n    }\n  }, {\n    key: \"_createRenderMask\",\n    value: function _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n      var itemCount = props.getItemCount(props.data);\n      (0, _invariant.default)(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`);\n      var renderMask = new _CellRenderMask.CellRenderMask(itemCount);\n      if (itemCount > 0) {\n        var allRegions = [cellsAroundViewport].concat((0, _toConsumableArray2.default)(additionalRegions != null ? additionalRegions : []));\n        for (var region of allRegions) {\n          renderMask.addCells(region);\n        }\n        if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n          var initialRegion = VirtualizedList._initialRenderRegion(props);\n          renderMask.addCells(initialRegion);\n        }\n        var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n        VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n      }\n      return renderMask;\n    }\n  }, {\n    key: \"_initialRenderRegion\",\n    value: function _initialRenderRegion(props) {\n      var _props$initialScrollI;\n      var itemCount = props.getItemCount(props.data);\n      var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) != null ? _props$initialScrollI : 0)));\n      var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n      return {\n        first: firstCellIndex,\n        last: lastCellIndex\n      };\n    }\n  }, {\n    key: \"_ensureClosestStickyHeader\",\n    value: function _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n      var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n      for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n        if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n          renderMask.addCells({\n            first: itemIdx,\n            last: itemIdx\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, prevState) {\n      var _newProps$maintainVis, _newProps$maintainVis2;\n      var itemCount = newProps.getItemCount(newProps.data);\n      if (itemCount === prevState.renderMask.numCells()) {\n        return prevState;\n      }\n      var maintainVisibleContentPositionAdjustment = null;\n      var prevFirstVisibleItemKey = prevState.firstVisibleItemKey;\n      var minIndexForVisible = (_newProps$maintainVis = (_newProps$maintainVis2 = newProps.maintainVisibleContentPosition) == null ? void 0 : _newProps$maintainVis2.minIndexForVisible) != null ? _newProps$maintainVis : 0;\n      var newFirstVisibleItemKey = newProps.getItemCount(newProps.data) > minIndexForVisible ? VirtualizedList._getItemKey(newProps, minIndexForVisible) : null;\n      if (newProps.maintainVisibleContentPosition != null && prevFirstVisibleItemKey != null && newFirstVisibleItemKey != null) {\n        if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {\n          var hint = itemCount - prevState.renderMask.numCells() + minIndexForVisible;\n          var firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(newProps, prevFirstVisibleItemKey, hint);\n          maintainVisibleContentPositionAdjustment = firstVisibleItemIndex != null ? firstVisibleItemIndex - minIndexForVisible : null;\n        } else {\n          maintainVisibleContentPositionAdjustment = null;\n        }\n      }\n      var constrainedCells = VirtualizedList._constrainToItemCount(maintainVisibleContentPositionAdjustment != null ? {\n        first: prevState.cellsAroundViewport.first + maintainVisibleContentPositionAdjustment,\n        last: prevState.cellsAroundViewport.last + maintainVisibleContentPositionAdjustment\n      } : prevState.cellsAroundViewport, newProps);\n      return {\n        cellsAroundViewport: constrainedCells,\n        renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n        firstVisibleItemKey: newFirstVisibleItemKey,\n        pendingScrollUpdateCount: maintainVisibleContentPositionAdjustment != null ? prevState.pendingScrollUpdateCount + 1 : prevState.pendingScrollUpdateCount\n      };\n    }\n  }, {\n    key: \"_constrainToItemCount\",\n    value: function _constrainToItemCount(cells, props) {\n      var itemCount = props.getItemCount(props.data);\n      var last = Math.min(itemCount - 1, cells.last);\n      var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n      return {\n        first: (0, _clamp.default)(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n        last: last\n      };\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index, props) {\n      if (props.keyExtractor != null) {\n        return props.keyExtractor(item, index);\n      }\n      var key = (0, _VirtualizeUtils.keyExtractor)(item, index);\n      if (key === String(index)) {\n        _usedIndexForKey = true;\n        if (item.type && item.type.displayName) {\n          _keylessItemComponentName = item.type.displayName;\n        }\n      }\n      return key;\n    }\n  }]);\n}(_StateSafePureComponent.default);\nVirtualizedList.contextType = _VirtualizedListContext.VirtualizedListContext;\nvar styles = _reactNative.StyleSheet.create({\n  verticallyInverted: _reactNative.Platform.OS === 'android' ? {\n    transform: [{\n      scale: -1\n    }]\n  } : {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nmodule.exports = VirtualizedList;","map":{"version":3,"names":["_reactNative","require","_Batchinator","_interopRequireDefault","_clamp","_infoLog","_CellRenderMask","_ChildListCollection","_FillRateHelper","_StateSafePureComponent","_ViewabilityHelper","_VirtualizedListCellRenderer","_VirtualizedListContext","_VirtualizeUtils","_invariant","_nullthrows","React","_interopRequireWildcard","_jsxRuntime","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onStartReachedThresholdOrDefault","onStartReachedThreshold","onEndReachedThresholdOrDefault","onEndReachedThreshold","getScrollingThreshold","threshold","visibleLength","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","findLastWhere","arr","predicate","length","VirtualizedList","_StateSafePureCompone","props","_this$props$updateCel","_this$props$maintainV","_this$props$maintainV2","_this","_classCallCheck2","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","keys","newProps","forEach","key","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","Map","_lastFocusedCellKey","ChildListCollection","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","zoomScale","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","jsx","View","assign","_props$refreshing","invariant","refreshing","JSON","stringify","ScrollView","refreshControl","RefreshControl","progressViewOffset","_onCellLayout","index","layout","nativeEvent","next","_selectOffset","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","getItemCount","data","scrollToIndex","animated","nullthrows","scrollToEnd","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_this$_convertParentS","perf","infoLog","prevDt","pendingScrollUpdateCount","setState","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","isViewable","getItem","item","_keyExtractor","_getOffsetApprox","Number","isInteger","__getFrameMetricsApprox","frameMetrics","floor","remainder","frame","_getFrameMetrics","getItemLayout","_getItemKey","lastFocusedCellRenderer","focusedCellIndex","itemCount","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","_checkProps","FillRateHelper","_updateCellsToRenderBatcher","Batchinator","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","ViewabilityHelper","viewabilityConfig","onViewableItemsChanged","_this$props","push","initialRenderRegion","_initialRenderRegion","minIndexForVisible","maintainVisibleContentPosition","firstVisibleItemKey","_inherits2","_createClass2","value","params","veryLast","scrollTo","console","warn","x","y","_this$props2","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","scrollToItem","_this$props3","scrollToOffset","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","_getCellKey","_this$context","hasMore","__isNative","__DEV__","flexWrap","flatStyles","StyleSheet","flatten","contentContainerStyle","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","min","computeWindowedRenderLimits","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","componentDidMount","registerAsNestedChild","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this2","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","shouldListenForLayout","enabled","undefined","onUpdateSeparators","onCellFocusCapture","_onCellFocusCapture","onUnmount","onCellLayout","nestedContext","render","_this3","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","isValidElement","VirtualizedListCellContextProvider","children","collapsable","style","compose","ListHeaderComponentStyle","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastSpacer","isSpacer","section","isLastSpacer","constrainToMeasured","clamp","firstMetrics","lastMetrics","spacerSize","_defineProperty2","ListFooterComponentStyle","scrollProps","invertStickyHeaders","isInvertedVirtualizedList","innerRet","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","ret","Context","Consumer","scrollContext","nesting","scrollEnabled","error","jsxs","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this4","measureLayout","scrollMetrics","metricsChanged","stack","_this5","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props8","onStartReached","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","distTop","distBottom","schedule","_this6","onUpdate","_findItemIndexWithKey","hint","curKey","additionalRegions","CellRenderMask","allRegions","concat","_toConsumableArray2","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","cellIdx","itemIdx","getDerivedStateFromProps","prevState","_newProps$maintainVis","_newProps$maintainVis2","numCells","maintainVisibleContentPositionAdjustment","prevFirstVisibleItemKey","newFirstVisibleItemKey","firstVisibleItemIndex","constrainedCells","keyExtractor","defaultKeyExtractor","String","type","displayName","StateSafePureComponent","contextType","VirtualizedListContext","create","Platform","OS","transform","scale","scaleY","scaleX","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["C:/Users/stjones/Desktop/Ra_App/node_modules/@react-native/virtualized-lists/Lists/VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ScrollResponderType} from 'react-native/Libraries/Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {\n  LayoutEvent,\n  ScrollEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\nimport type {ViewToken} from './ViewabilityHelper';\nimport type {\n  FrameMetricProps,\n  Item,\n  Props,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './VirtualizedListProps';\n\nimport {\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n  StyleSheet,\n  findNodeHandle,\n} from 'react-native';\nimport Batchinator from '../Interaction/Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../Utilities/infoLog';\nimport {CellRenderMask} from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from './FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from './ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\n\nexport type {RenderItemProps, RenderItemType, Separators};\n\nconst ON_EDGE_REACHED_EPSILON = 0.001;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype State = {\n  renderMask: CellRenderMask,\n  cellsAroundViewport: {first: number, last: number},\n  // Used to track items added at the start of the list for maintainVisibleContentPosition.\n  firstVisibleItemKey: ?string,\n  // When > 0 the scroll position available in JS is considered stale and should not be used.\n  pendingScrollUpdateCount: number,\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold: ?number) {\n  return onStartReachedThreshold ?? 2;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// getScrollingThreshold(visibleLength, onEndReachedThreshold)\nfunction getScrollingThreshold(threshold: number, visibleLength: number) {\n  return (threshold * visibleLength) / 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\nfunction findLastWhere<T>(\n  arr: $ReadOnlyArray<T>,\n  predicate: (element: T) => boolean,\n): T | null {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }): $FlowFixMe {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    const offset =\n      Math.max(\n        0,\n        this._getOffsetApprox(index, this.props) -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.add(childList.ref, childList.cellKey);\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.remove(childList.ref);\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this._checkProps(props);\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);\n\n    const minIndexForVisible =\n      this.props.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),\n      firstVisibleItemKey:\n        this.props.getItemCount(this.props.data) > minIndexForVisible\n          ? VirtualizedList._getItemKey(this.props, minIndexForVisible)\n          : null,\n      // When we have a non-zero initialScrollIndex, we will receive a\n      // scroll event later so this will prevent the window from updating\n      // until we get a valid offset.\n      pendingScrollUpdateCount:\n        this.props.initialScrollIndex != null &&\n        this.props.initialScrollIndex > 0\n          ? 1\n          : 0,\n    };\n  }\n\n  _checkProps(props: Props) {\n    const {onScroll, windowSize, getItemCount, data, initialScrollIndex} =\n      props;\n\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !onScroll || !onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    invariant(\n      getItemCount,\n      'VirtualizedList: The \"getItemCount\" prop must be provided',\n    );\n\n    const itemCount = getItemCount(data);\n\n    if (\n      initialScrollIndex != null &&\n      !this._hasTriggeredInitialScrollToIndex &&\n      (initialScrollIndex < 0 ||\n        (itemCount > 0 && initialScrollIndex >= itemCount)) &&\n      !this._hasWarned.initialScrollIndex\n    ) {\n      console.warn(\n        `initialScrollIndex \"${initialScrollIndex}\" is not valid (list has ${itemCount} items)`,\n      );\n      this._hasWarned.initialScrollIndex = true;\n    }\n\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      const flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n\n  static _findItemIndexWithKey(\n    props: Props,\n    key: string,\n    hint: ?number,\n  ): ?number {\n    const itemCount = props.getItemCount(props.data);\n    if (hint != null && hint >= 0 && hint < itemCount) {\n      const curKey = VirtualizedList._getItemKey(props, hint);\n      if (curKey === key) {\n        return hint;\n      }\n    }\n    for (let ii = 0; ii < itemCount; ii++) {\n      const curKey = VirtualizedList._getItemKey(props, ii);\n      if (curKey === key) {\n        return ii;\n      }\n    }\n    return null;\n  }\n\n  static _getItemKey(\n    props: {\n      data: Props['data'],\n      getItem: Props['getItem'],\n      keyExtractor: Props['keyExtractor'],\n      ...\n    },\n    index: number,\n  ): string {\n    const item = props.getItem(props.data, index);\n    return VirtualizedList._keyExtractor(item, index, props);\n  }\n\n  static _createRenderMask(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,\n  ): CellRenderMask {\n    const itemCount = props.getItemCount(props.data);\n\n    invariant(\n      cellsAroundViewport.first >= 0 &&\n        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&\n        cellsAroundViewport.last < itemCount,\n      `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`,\n    );\n\n    const renderMask = new CellRenderMask(itemCount);\n\n    if (itemCount > 0) {\n      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];\n      for (const region of allRegions) {\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        const initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      const stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(\n        props,\n        stickyIndicesSet,\n        renderMask,\n        cellsAroundViewport.first,\n      );\n    }\n\n    return renderMask;\n  }\n\n  static _initialRenderRegion(props: Props): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n\n    const firstCellIndex = Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(props.initialScrollIndex ?? 0)),\n    );\n\n    const lastCellIndex =\n      Math.min(\n        itemCount,\n        firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender),\n      ) - 1;\n\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex,\n    };\n  }\n\n  static _ensureClosestStickyHeader(\n    props: Props,\n    stickyIndicesSet: Set<number>,\n    renderMask: CellRenderMask,\n    cellIdx: number,\n  ) {\n    const stickyOffset = props.ListHeaderComponent ? 1 : 0;\n\n    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({first: itemIdx, last: itemIdx});\n        break;\n      }\n    }\n  }\n\n  _adjustCellsAroundViewport(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    pendingScrollUpdateCount: number,\n  ): {first: number, last: number} {\n    const {data, getItemCount} = props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      props.onEndReachedThreshold,\n    );\n    const {contentLength, offset, visibleLength} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data)\n        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n        : cellsAroundViewport;\n    }\n\n    let newCellsAroundViewport: {first: number, last: number};\n    if (props.disableVirtualization) {\n      const renderAhead =\n        distanceFromEnd < onEndReachedThreshold * visibleLength\n          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)\n          : 0;\n\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(\n          cellsAroundViewport.last + renderAhead,\n          getItemCount(data) - 1,\n        ),\n      };\n    } else {\n      // If we have a pending scroll update, we should not adjust the render window as it\n      // might override the correct window.\n      if (pendingScrollUpdateCount > 0) {\n        return cellsAroundViewport.last >= getItemCount(data)\n          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n          : cellsAroundViewport;\n      }\n\n      newCellsAroundViewport = computeWindowedRenderLimits(\n        props,\n        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),\n        windowSizeOrDefault(props.windowSize),\n        cellsAroundViewport,\n        this.__getFrameMetricsApprox,\n        this._scrollMetrics,\n      );\n      invariant(\n        newCellsAroundViewport.last < getItemCount(data),\n        'computeWindowedRenderLimits() should return range in-bounds',\n      );\n    }\n\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      const childIdx = this._findFirstChildWithMore(\n        newCellsAroundViewport.first,\n        newCellsAroundViewport.last,\n      );\n\n      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;\n    }\n\n    return newCellsAroundViewport;\n  }\n\n  _findFirstChildWithMore(first: number, last: number): number | null {\n    for (let ii = first; ii <= last; ii++) {\n      const cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (\n        cellKeyForIndex != null &&\n        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>\n          childList.hasMore(),\n        )\n      ) {\n        return ii;\n      }\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({ref: this});\n    }\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    const itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n\n    let maintainVisibleContentPositionAdjustment: ?number = null;\n    const prevFirstVisibleItemKey = prevState.firstVisibleItemKey;\n    const minIndexForVisible =\n      newProps.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n    const newFirstVisibleItemKey =\n      newProps.getItemCount(newProps.data) > minIndexForVisible\n        ? VirtualizedList._getItemKey(newProps, minIndexForVisible)\n        : null;\n    if (\n      newProps.maintainVisibleContentPosition != null &&\n      prevFirstVisibleItemKey != null &&\n      newFirstVisibleItemKey != null\n    ) {\n      if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {\n        // Fast path if items were added at the start of the list.\n        const hint =\n          itemCount - prevState.renderMask.numCells() + minIndexForVisible;\n        const firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(\n          newProps,\n          prevFirstVisibleItemKey,\n          hint,\n        );\n        maintainVisibleContentPositionAdjustment =\n          firstVisibleItemIndex != null\n            ? firstVisibleItemIndex - minIndexForVisible\n            : null;\n      } else {\n        maintainVisibleContentPositionAdjustment = null;\n      }\n    }\n\n    const constrainedCells = VirtualizedList._constrainToItemCount(\n      maintainVisibleContentPositionAdjustment != null\n        ? {\n            first:\n              prevState.cellsAroundViewport.first +\n              maintainVisibleContentPositionAdjustment,\n            last:\n              prevState.cellsAroundViewport.last +\n              maintainVisibleContentPositionAdjustment,\n          }\n        : prevState.cellsAroundViewport,\n      newProps,\n    );\n\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n      firstVisibleItemKey: newFirstVisibleItemKey,\n      pendingScrollUpdateCount:\n        maintainVisibleContentPositionAdjustment != null\n          ? prevState.pendingScrollUpdateCount + 1\n          : prevState.pendingScrollUpdateCount,\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = VirtualizedList._keyExtractor(item, ii, this.props);\n\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      const shouldListenForLayout =\n        getItemLayout == null || debug || this._fillRateHelper.enabled();\n\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onCellFocusCapture={e => this._onCellFocusCapture(key)}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n          {...(shouldListenForLayout && {\n            onCellLayout: this._onCellLayout,\n          })}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  static _constrainToItemCount(\n    cells: {first: number, last: number},\n    props: Props,\n  ): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const last = Math.min(itemCount - 1, cells.last);\n\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      props.maxToRenderPerBatch,\n    );\n\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last,\n    };\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  static _keyExtractor(\n    item: Item,\n    index: number,\n    props: {\n      keyExtractor?: ?(item: Item, index: number) => string,\n      ...\n    },\n  ): string {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    this._checkProps(this.props);\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells: Array<any | React.Node> = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            // We expect that header component will be a single native view so make it\n            // not collapsable to avoid this view being flattened and make this assumption\n            // no longer true.\n            collapsable={false}\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-empty'}\n          key=\"$empty\">\n          {React.cloneElement(element, {\n            onLayout: (event: LayoutEvent) => {\n              this._onLayoutEmpty(event);\n              if (element.props.onLayout) {\n                element.props.onLayout(event);\n              }\n            },\n            style: StyleSheet.compose(inversionStyle, element.props.style),\n          })}\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n\n      const renderRegions = this.state.renderMask.enumerateRegions();\n      const lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n\n      for (const section of renderRegions) {\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          const isLastSpacer = section === lastSpacer;\n          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          const last = constrainToMeasured\n            ? clamp(\n                section.first - 1,\n                section.last,\n                this._highestMeasuredFrameIndex,\n              )\n            : section.last;\n\n          const firstMetrics = this.__getFrameMetricsApprox(\n            section.first,\n            this.props,\n          );\n          const lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          const spacerSize =\n            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(\n            <View\n              key={`$spacer-${section.first}`}\n              style={{[spacerKey]: spacerSize}}\n            />,\n          );\n        } else {\n          this._pushCells(\n            cells,\n            stickyHeaderIndices,\n            stickyIndicesFromProps,\n            section.first,\n            section.last,\n            inversionStyle,\n          );\n        }\n      }\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 4. Render the ScrollView\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n      isInvertedVirtualizedList: this.props.inverted,\n      maintainVisibleContentPosition:\n        this.props.maintainVisibleContentPosition != null\n          ? {\n              ...this.props.maintainVisibleContentPosition,\n              // Adjust index to account for ListHeaderComponent.\n              minIndexForVisible:\n                this.props.maintainVisibleContentPosition.minIndexForVisible +\n                (this.props.ListHeaderComponent ? 1 : 0),\n            }\n          : undefined,\n    };\n\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  _cellRefs: {[string]: null | CellRenderer<any>} = {};\n  _fillRateHelper: FillRateHelper;\n  _frames: {\n    [string]: {\n      inLayout?: boolean,\n      index: number,\n      length: number,\n      offset: number,\n    },\n  } = {};\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _lastFocusedCellKey: ?string = null;\n  _nestedChildLists: ChildListCollection<VirtualizedList> =\n    new ChildListCollection();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  // $FlowFixMe[missing-local-annot]\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentStartForContentLength = 0;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      // $FlowFixMe[incompatible-use]\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (e: LayoutEvent, cellKey: string, index: number): void => {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  };\n\n  _onCellFocusCapture(cellKey: string) {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    delete this._cellRefs[cellKey];\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._nestedChildLists.forEach(childList => {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.first,\n      this.props,\n    ).offset;\n    const frameLast = this.__getFrameMetricsApprox(\n      this.state.cellsAroundViewport.last,\n      this.props,\n    );\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEdgeReached() {\n    const {\n      data,\n      getItemCount,\n      onStartReached,\n      onStartReachedThreshold,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the edge reached callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    let distanceFromStart = offset;\n    let distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    const DEFAULT_THRESHOLD_PX = 2;\n\n    const startThreshold =\n      onStartReachedThreshold != null\n        ? onStartReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const endThreshold =\n      onEndReachedThreshold != null\n        ? onEndReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const isWithinStartThreshold = distanceFromStart <= startThreshold;\n    const isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (\n      onEndReached &&\n      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&\n      isWithinEndThreshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    else if (\n      onStartReached != null &&\n      this.state.cellsAroundViewport.first === 0 &&\n      isWithinStartThreshold &&\n      this._scrollMetrics.contentLength !== this._sentStartForContentLength\n    ) {\n      this._sentStartForContentLength = this._scrollMetrics.contentLength;\n      onStartReached({distanceFromStart});\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    else {\n      this._sentStartForContentLength = isWithinStartThreshold\n        ? this._sentStartForContentLength\n        : 0;\n      this._sentEndForContentLength = isWithinEndThreshold\n        ? this._sentEndForContentLength\n        : 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        if (\n          this.props.initialScrollIndex <\n          this.props.getItemCount(this.props.data)\n        ) {\n          this.scrollToIndex({\n            animated: false,\n            index: nullthrows(this.props.initialScrollIndex),\n          });\n        } else {\n          this.scrollToEnd({animated: false});\n        }\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }): $FlowFixMe => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    if (this.state.pendingScrollUpdateCount > 0) {\n      this.setState(state => ({\n        pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1,\n      }));\n    }\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEdgeReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state.cellsAroundViewport;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onStartReachedThreshold = onStartReachedThresholdOrDefault(\n      this.props.onStartReachedThreshold,\n    );\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop =\n        offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri =\n        distTop < 0 ||\n        (velocity < -2 &&\n          distTop <\n            getScrollingThreshold(onStartReachedThreshold, visibleLength));\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      const distBottom =\n        this.__getFrameMetricsApprox(last, this.props).offset -\n        (offset + visibleLength);\n      hiPri =\n        distBottom < 0 ||\n        (velocity > 2 &&\n          distBottom <\n            getScrollingThreshold(onEndReachedThreshold, visibleLength));\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n\n    this.setState((state, props) => {\n      const cellsAroundViewport = this._adjustCellsAroundViewport(\n        props,\n        state.cellsAroundViewport,\n        state.pendingScrollUpdateCount,\n      );\n      const renderMask = VirtualizedList._createRenderMask(\n        props,\n        cellsAroundViewport,\n        this._getNonViewportRenderRegions(props),\n      );\n\n      if (\n        cellsAroundViewport.first === state.cellsAroundViewport.first &&\n        cellsAroundViewport.last === state.cellsAroundViewport.last &&\n        renderMask.equals(state.renderMask)\n      ) {\n        return null;\n      }\n\n      return {cellsAroundViewport, renderMask};\n    });\n  };\n\n  _createViewToken = (\n    index: number,\n    isViewable: boolean,\n    props: FrameMetricProps,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const {data, getItem} = props;\n    const item = getItem(data, index);\n    return {\n      index,\n      item,\n      key: VirtualizedList._keyExtractor(item, index, props),\n      isViewable,\n    };\n  };\n\n  /**\n   * Gets an approximate offset to an item at a given index. Supports\n   * fractional indices.\n   */\n  _getOffsetApprox = (index: number, props: FrameMetricProps): number => {\n    if (Number.isInteger(index)) {\n      return this.__getFrameMetricsApprox(index, props).offset;\n    } else {\n      const frameMetrics = this.__getFrameMetricsApprox(\n        Math.floor(index),\n        props,\n      );\n      const remainder = index - Math.floor(index);\n      return frameMetrics.offset + remainder * frameMetrics.length;\n    }\n  };\n\n  __getFrameMetricsApprox: (\n    index: number,\n    props: FrameMetricProps,\n  ) => {\n    length: number,\n    offset: number,\n    ...\n  } = (index, props) => {\n    const frame = this._getFrameMetrics(index, props);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {data, getItemCount, getItemLayout} = props;\n      invariant(\n        index >= 0 && index < getItemCount(data),\n        'Tried to get frame for out of range index ' + index,\n      );\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n    props: FrameMetricProps,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItemCount, getItemLayout} = props;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      'Tried to get frame for out of range index ' + index,\n    );\n    const frame = this._frames[VirtualizedList._getItemKey(props, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n         * suppresses an error found when Flow v0.63 was deployed. To see the error\n         * delete this comment and run Flow. */\n        return getItemLayout(data, index);\n      }\n    }\n    return frame;\n  };\n\n  _getNonViewportRenderRegions = (\n    props: FrameMetricProps,\n  ): $ReadOnlyArray<{\n    first: number,\n    last: number,\n  }> => {\n    // Keep a viewport's worth of content around the last focused cell to allow\n    // random navigation around it without any blanking. E.g. tabbing from one\n    // focused item out of viewport to another.\n    if (\n      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])\n    ) {\n      return [];\n    }\n\n    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n    const focusedCellIndex = lastFocusedCellRenderer.props.index;\n    const itemCount = props.getItemCount(props.data);\n\n    // The last cell we rendered may be at a new index. Bail if we don't know\n    // where it is.\n    if (\n      focusedCellIndex >= itemCount ||\n      VirtualizedList._getItemKey(props, focusedCellIndex) !==\n        this._lastFocusedCellKey\n    ) {\n      return [];\n    }\n\n    let first = focusedCellIndex;\n    let heightOfCellsBeforeFocused = 0;\n    for (\n      let i = first - 1;\n      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;\n      i--\n    ) {\n      first--;\n      heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    let last = focusedCellIndex;\n    let heightOfCellsAfterFocused = 0;\n    for (\n      let i = last + 1;\n      i < itemCount &&\n      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;\n      i++\n    ) {\n      last++;\n      heightOfCellsAfterFocused += this.__getFrameMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    return [{first, last}];\n  };\n\n  _updateViewableItems(\n    props: FrameMetricProps,\n    cellsAroundViewport: {first: number, last: number},\n  ) {\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the visibility callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        props,\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        cellsAroundViewport,\n      );\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted:\n    Platform.OS === 'android'\n      ? {transform: [{scale: -1}]}\n      : {transform: [{scaleY: -1}]},\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}